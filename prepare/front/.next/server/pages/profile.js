/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/profile";
exports.ids = ["pages/profile"];
exports.modules = {

/***/ "./node_modules/@swc/helpers/lib/_async_to_generator.js":
/*!**************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_async_to_generator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _asyncToGenerator;\n    }\n}));\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fYXN5bmNfdG9fZ2VuZXJhdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2FzeW5jX3RvX2dlbmVyYXRvci5qcz8wZTMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3I7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgICAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gICAgfVxufVxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuICAgICAgICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgICAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_async_to_generator.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_extends.js":
/*!***************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_extends.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _extends;\n    }\n}));\nfunction extends_() {\n    extends_ = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_.apply(this, arguments);\n}\nfunction _extends() {\n    return extends_.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19leHRlbmRzLmpzPzM5OGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfZXh0ZW5kcztcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGV4dGVuZHNfKCkge1xuICAgIGV4dGVuZHNfID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgZm9yKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gc291cmNlKXtcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH07XG4gICAgcmV0dXJuIGV4dGVuZHNfLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgICByZXR1cm4gZXh0ZW5kc18uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_extends.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_default.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_default.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireDefault;\n    }\n}));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanM/OWI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_default.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _interopRequireWildcard;\n    }\n}));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkNBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZC5qcz8wNTFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQ7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHtcbiAgICBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7XG4gICAgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTtcbiAgICB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHtcbiAgICAgICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICAgIH0pKG5vZGVJbnRlcm9wKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHtcbiAgICBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTtcbiAgICBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlLmdldChvYmopO1xuICAgIH1cbiAgICB2YXIgbmV3T2JqID0ge307XG4gICAgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAgIGZvcih2YXIga2V5IGluIG9iail7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _objectWithoutPropertiesLoose;\n    }\n}));\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDJDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVCQUF1QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlLmpzPzRjYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZTtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgICB2YXIgdGFyZ2V0ID0ge307XG4gICAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICAgIHZhciBrZXksIGk7XG4gICAgZm9yKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./actions/post.js":
/*!*************************!*\
  !*** ./actions/post.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addComment\": () => (/* binding */ addComment),\n/* harmony export */   \"addPost\": () => (/* binding */ addPost),\n/* harmony export */   \"editComment\": () => (/* binding */ editComment),\n/* harmony export */   \"editPost\": () => (/* binding */ editPost),\n/* harmony export */   \"likeComment\": () => (/* binding */ likeComment),\n/* harmony export */   \"likePost\": () => (/* binding */ likePost),\n/* harmony export */   \"loadHashtagPosts\": () => (/* binding */ loadHashtagPosts),\n/* harmony export */   \"loadPost\": () => (/* binding */ loadPost),\n/* harmony export */   \"loadPosts\": () => (/* binding */ loadPosts),\n/* harmony export */   \"loadUserPosts\": () => (/* binding */ loadUserPosts),\n/* harmony export */   \"removeComment\": () => (/* binding */ removeComment),\n/* harmony export */   \"removePost\": () => (/* binding */ removePost),\n/* harmony export */   \"retweetPost\": () => (/* binding */ retweetPost),\n/* harmony export */   \"unLikeComment\": () => (/* binding */ unLikeComment),\n/* harmony export */   \"unLikePost\": () => (/* binding */ unLikePost),\n/* harmony export */   \"uploadImages\": () => (/* binding */ uploadImages)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../reducers/userSlice */ \"./reducers/userSlice.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__]);\n([_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__, axios__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\naxios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].defaults.baseURL = 'http://localhost:7777';\naxios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].defaults.withCredentials = true;\nconst loadPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/loadPost', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/post/${data}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/loadPosts', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/posts?lastId=${data || 0}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadUserPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/loadUserPosts', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(data);\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/user/${data.userId}/posts?last=${data?.lastId || 0}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadHashtagPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/loadHashtagPosts', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/hashtag/${encodeURIComponent(data.hashtag)}?lastId=${data?.lastId || 0}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst addPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/addPost', async (data, thunkAPI) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post('/post', data);\n    thunkAPI.dispatch(_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].actions.addPostToMe(response.data.id));\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst removePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/removePost', async (data, thunkAPI) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data}`);\n    thunkAPI.dispatch(_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].actions.removePostToMe(response.data));\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst retweetPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/retweetPost', async (data, thunkAPI) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`/post/${data}/retweet`);\n    thunkAPI.dispatch(_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].actions.addPostToMe(response.data.id));\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst addComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/addComment', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`/post/${data.postId}/comment`, data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst uploadImages = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/addImage', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`/post/images`, data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst likePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/likePost', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/post/${data}/like`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst unLikePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/unLikePost', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data}/like`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst editPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/editPost', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/post/${data.postId}/edit`, data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst likeComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/likeComment', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/post/${data.postId}/comment/${data.commentId}/like`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst unLikeComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/unLikeComment', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data.postId}/comment/${data.commentId}/like`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst removeComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/removeComment', async (data, thunkAPI) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data.postId}/comment/${data.commentId}`);\n    thunkAPI.dispatch(_reducers_userSlice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].actions.removePostToMe(response.data));\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst editComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('post/editComment', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/post/${data.postId}/comment/${data.commentId}/edit`, data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./actions/post.js\n");

/***/ }),

/***/ "./actions/user.js":
/*!*************************!*\
  !*** ./actions/user.js ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeNickname\": () => (/* binding */ changeNickname),\n/* harmony export */   \"followUser\": () => (/* binding */ followUser),\n/* harmony export */   \"loadFollowerUsers\": () => (/* binding */ loadFollowerUsers),\n/* harmony export */   \"loadFollowingUsers\": () => (/* binding */ loadFollowingUsers),\n/* harmony export */   \"loadMyInfo\": () => (/* binding */ loadMyInfo),\n/* harmony export */   \"loadUser\": () => (/* binding */ loadUser),\n/* harmony export */   \"logIn\": () => (/* binding */ logIn),\n/* harmony export */   \"logOut\": () => (/* binding */ logOut),\n/* harmony export */   \"removeFollower\": () => (/* binding */ removeFollower),\n/* harmony export */   \"signUp\": () => (/* binding */ signUp),\n/* harmony export */   \"unFollowUser\": () => (/* binding */ unFollowUser)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_1__]);\naxios__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.baseURL = 'http://localhost:7777'; //기본 url을 설정해준다.\n\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.withCredentials = true; // 쿠키를 전달해준다.\n\nconst loadMyInfo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/loadMyInfo', async () => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('/user');\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/loadUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(data);\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`/user/${data.userId}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst logIn = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/login', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post('/user/login', data);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst logOut = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/logout', async () => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post('/user/logout');\n  return response.data;\n});\nconst signUp = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/signup', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post('/user', data);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst followUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/followUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].patch(`/user/${data}/follow`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n\n  ;\n});\nconst unFollowUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/unFollowUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    //delete는 body를 못받는다.\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"][\"delete\"](`/user/${data}/follow`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst removeFollower = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/removeFollower', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"][\"delete\"](`/user/follow/${data}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadFollowerUsers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/unFollowUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`/user/followings`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst loadFollowingUsers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/unFollowUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`/user/followers`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst changeNickname = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('user/nickname', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].patch('/user/nickname', data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response.data);\n  }\n});\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./actions/user.js\n");

/***/ }),

/***/ "./components/AppLayout.js":
/*!*********************************!*\
  !*** ./components/AppLayout.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AppLayout\": () => (/* binding */ AppLayout),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"prop-types\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! styled-components */ \"styled-components\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _hooks_useInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hooks/useInput */ \"./components/hooks/useInput.js\");\n/* harmony import */ var _UserProfile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UserProfile */ \"./components/UserProfile.js\");\n/* harmony import */ var _LoginForm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./LoginForm */ \"./components/LoginForm.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_UserProfile__WEBPACK_IMPORTED_MODULE_8__, _LoginForm__WEBPACK_IMPORTED_MODULE_9__]);\n([_UserProfile__WEBPACK_IMPORTED_MODULE_8__, _LoginForm__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/components/AppLayout.js\";\n\n\n\n\n\n\n\n\n\n\n\n\nconst SearchInput = styled_components__WEBPACK_IMPORTED_MODULE_6___default()(antd__WEBPACK_IMPORTED_MODULE_3__.Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"sc-cbt9ux-0\"\n})([\"vertical-align :middle;\"]);\nconst Global = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__.createGlobalStyle)([\".ant-row{margin-right :0 !important;margin-left :0 !important;}.ant-col:first-child{padding-left :0 !important;}.ant-col:nth-child(2){display:flex;flex-direction:column;align-items:center;}.ant-col:last-child{padding-right :0 !important;}\"]); // const style = useMemo(() => ({ marginTop : 10 }), []);\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    me\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_5__.useSelector)(state => state.user);\n  const [searchInput, onChangeSearchInput] = (0,_hooks_useInput__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('');\n  const onSearch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    next_router__WEBPACK_IMPORTED_MODULE_4___default().push(`/hashtag/${searchInput}`);\n  }, [searchInput]);\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(\"div\", {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(Global, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Menu, {\n          mode: \"horizontal\",\n          selectedKeys: [router.pathname],\n          items: [{\n            label: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n              href: \"/\",\n              children: \"\\uB178\\uB4DC\\uBC84\\uB4DC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 34\n            }, undefined),\n            key: '/'\n          }, {\n            label: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n              href: \"/profile\",\n              children: \"\\uD504\\uB85C\\uD544\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 34\n            }, undefined),\n            key: '/profile'\n          }, {\n            label: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(SearchInput, {\n              enterButton: true,\n              value: searchInput,\n              onChange: onChangeSearchInput,\n              onSearch: onSearch,\n              className: \"!align-middle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 34\n            }, undefined),\n            key: '/search'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Row, {\n          gutter: 10,\n          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Col, {\n            xs: 24,\n            md: 6,\n            children: me ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_UserProfile__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 35\n            }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_LoginForm__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 53\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Col, {\n            xs: 24,\n            md: 12,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Col, {\n            xs: 24,\n            md: 6,\n            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(\"a\", {\n              href: \"https://www.github.com/jawon0407\",\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: \"Made by jawon0407\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, undefined)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, undefined)\n  }, void 0, false);\n};\nAppLayout.propTypes = {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().node.isRequired)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AppLayout);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0FwcExheW91dC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBLE1BQU1pQixXQUFXLEdBQUdMLHdEQUFNLENBQUNQLDhDQUFELENBQVQ7RUFBQTtFQUFBO0FBQUEsK0JBQWpCO0FBSUEsTUFBTWMsTUFBTSxHQUFHTixvRUFBSCxvUEFBWixFQXFCQTs7QUFFTyxNQUFNTyxTQUFTLEdBQUcsQ0FBQztFQUFFQztBQUFGLENBQUQsS0FBa0I7RUFDdkMsTUFBTTtJQUFFQztFQUFGLElBQVNaLHdEQUFXLENBQUVhLEtBQUQsSUFBV0EsS0FBSyxDQUFDQyxJQUFsQixDQUExQjtFQUNBLE1BQU0sQ0FBRUMsV0FBRixFQUFlQyxtQkFBZixJQUF1Q1osMkRBQVEsQ0FBQyxFQUFELENBQXJEO0VBQ0EsTUFBTWEsUUFBUSxHQUFHMUIsa0RBQVcsQ0FBQyxNQUFNO0lBQy9CTyx1REFBQSxDQUFhLFlBQVdpQixXQUFZLEVBQXBDO0VBQ0QsQ0FGeUIsRUFFdkIsQ0FBQ0EsV0FBRCxDQUZ1QixDQUE1QjtFQUdBLE1BQU1JLE1BQU0sR0FBR3BCLHNEQUFTLEVBQXhCO0VBQ0Esb0JBQ0k7SUFBQSx1QkFDSTtNQUFBLHdCQUNJLCtEQUFDLE1BQUQ7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQURKLGVBRUk7UUFBQSx3QkFDSSwrREFBQyxzQ0FBRDtVQUNJLElBQUksRUFBQyxZQURUO1VBRUksWUFBWSxFQUFFLENBQUNvQixNQUFNLENBQUNDLFFBQVIsQ0FGbEI7VUFHSSxLQUFLLEVBQUUsQ0FDUDtZQUFFQyxLQUFLLGVBQUUsK0RBQUMsa0RBQUQ7Y0FBTSxJQUFJLEVBQUMsR0FBWDtjQUFBO1lBQUE7Y0FBQTtjQUFBO2NBQUE7WUFBQSxhQUFUO1lBQXFDQyxHQUFHLEVBQUU7VUFBMUMsQ0FETyxFQUVQO1lBQUVELEtBQUssZUFBRSwrREFBQyxrREFBRDtjQUFNLElBQUksRUFBQyxVQUFYO2NBQUE7WUFBQTtjQUFBO2NBQUE7Y0FBQTtZQUFBLGFBQVQ7WUFBMkNDLEdBQUcsRUFBRTtVQUFoRCxDQUZPLEVBR1A7WUFBRUQsS0FBSyxlQUFFLCtEQUFDLFdBQUQ7Y0FDTCxXQUFXLE1BRE47Y0FFTCxLQUFLLEVBQUVOLFdBRkY7Y0FHTCxRQUFRLEVBQUVDLG1CQUhMO2NBSUwsUUFBUSxFQUFFQyxRQUpMO2NBS0wsU0FBUyxFQUFDO1lBTEw7Y0FBQTtjQUFBO2NBQUE7WUFBQSxhQUFUO1lBT0lLLEdBQUcsRUFBRTtVQVBULENBSE87UUFIWDtVQUFBO1VBQUE7VUFBQTtRQUFBLGFBREosZUFpQkksK0RBQUMscUNBQUQ7VUFBSyxNQUFNLEVBQUUsRUFBYjtVQUFBLHdCQUNJLCtEQUFDLHFDQUFEO1lBQUssRUFBRSxFQUFFLEVBQVQ7WUFBYSxFQUFFLEVBQUUsQ0FBakI7WUFBQSxVQUNLVixFQUFFLGdCQUFHLCtEQUFDLG9EQUFEO2NBQUE7Y0FBQTtjQUFBO1lBQUEsYUFBSCxnQkFBcUIsK0RBQUMsa0RBQUQ7Y0FBQTtjQUFBO2NBQUE7WUFBQTtVQUQ1QjtZQUFBO1lBQUE7WUFBQTtVQUFBLGFBREosZUFJSSwrREFBQyxxQ0FBRDtZQUFLLEVBQUUsRUFBRSxFQUFUO1lBQWEsRUFBRSxFQUFFLEVBQWpCO1lBQUEsVUFDS0Q7VUFETDtZQUFBO1lBQUE7WUFBQTtVQUFBLGFBSkosZUFPSSwrREFBQyxxQ0FBRDtZQUFLLEVBQUUsRUFBRSxFQUFUO1lBQWEsRUFBRSxFQUFFLENBQWpCO1lBQUEsdUJBQ0k7Y0FBRyxJQUFJLEVBQUMsa0NBQVI7Y0FBMkMsTUFBTSxFQUFDLFFBQWxEO2NBQTJELEdBQUcsRUFBQyxxQkFBL0Q7Y0FBQTtZQUFBO2NBQUE7Y0FBQTtjQUFBO1lBQUE7VUFESjtZQUFBO1lBQUE7WUFBQTtVQUFBLGFBUEo7UUFBQTtVQUFBO1VBQUE7VUFBQTtRQUFBLGFBakJKO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQUZKO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtFQURKLGlCQURKO0FBc0NILENBN0NNO0FBK0NQRCxTQUFTLENBQUNhLFNBQVYsR0FBc0I7RUFDbEJaLFFBQVEsRUFBR25CLG1FQUF5QmlDO0FBRGxCLENBQXRCO0FBSUEsaUVBQWVmLFNBQWYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vY29tcG9uZW50cy9BcHBMYXlvdXQuanM/Y2Q2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCB7IE1lbnUgLCBJbnB1dCAsIFJvdyAsIENvbCB9IGZyb20gXCJhbnRkXCI7XG5pbXBvcnQgUm91dGVyLCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCB7IHVzZVNlbGVjdG9yICwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgc3R5bGVkICwge2NyZWF0ZUdsb2JhbFN0eWxlfSBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcbmltcG9ydCB1c2VJbnB1dCBmcm9tICcuL2hvb2tzL3VzZUlucHV0JztcbmltcG9ydCBVc2VyUHJvZmlsZSBmcm9tICcuL1VzZXJQcm9maWxlJztcbmltcG9ydCBMb2dpbkZvcm0gZnJvbSBcIi4vTG9naW5Gb3JtXCI7XG5cbmNvbnN0IFNlYXJjaElucHV0ID0gc3R5bGVkKElucHV0LlNlYXJjaClgXG4gICAgdmVydGljYWwtYWxpZ24gOiBtaWRkbGU7XG5gO1xuXG5jb25zdCBHbG9iYWwgPSBjcmVhdGVHbG9iYWxTdHlsZWBcbiAgICAuYW50LXJvd3tcbiAgICAgICAgbWFyZ2luLXJpZ2h0IDogMCAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW4tbGVmdCA6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAuYW50LWNvbDpmaXJzdC1jaGlsZHtcbiAgICAgICAgcGFkZGluZy1sZWZ0IDogMCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5hbnQtY29sOm50aC1jaGlsZCgyKXtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICB9XG5cbiAgICAuYW50LWNvbDpsYXN0LWNoaWxke1xuICAgICAgICBwYWRkaW5nLXJpZ2h0IDogMCAhaW1wb3J0YW50O1xuICAgIH1cbmA7XG5cbi8vIGNvbnN0IHN0eWxlID0gdXNlTWVtbygoKSA9PiAoeyBtYXJnaW5Ub3AgOiAxMCB9KSwgW10pO1xuXG5leHBvcnQgY29uc3QgQXBwTGF5b3V0ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICAgIGNvbnN0IHsgbWUgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudXNlcik7XG4gICAgY29uc3QgWyBzZWFyY2hJbnB1dCwgb25DaGFuZ2VTZWFyY2hJbnB1dCBdID0gdXNlSW5wdXQoJycpO1xuICAgIGNvbnN0IG9uU2VhcmNoID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBSb3V0ZXIucHVzaChgL2hhc2h0YWcvJHtzZWFyY2hJbnB1dH1gKTtcbiAgICAgIH0sIFtzZWFyY2hJbnB1dF0pO1xuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxHbG9iYWwgLz5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8TWVudVxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZT1cImhvcml6b250YWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRLZXlzPXtbcm91dGVyLnBhdGhuYW1lXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiA8TGluayBocmVmPVwiL1wiPuuFuOuTnOuyhOuTnDwvTGluaz4sIGtleTogJy8nIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGxhYmVsOiA8TGluayBocmVmPVwiL3Byb2ZpbGVcIj7tlITroZztlYQ8L0xpbms+LCBrZXk6ICcvcHJvZmlsZScgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgbGFiZWw6IDxTZWFyY2hJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudGVyQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3NlYXJjaElucHV0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZVNlYXJjaElucHV0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VhcmNoPXtvblNlYXJjaH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCIhYWxpZ24tbWlkZGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogJy9zZWFyY2gnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8Um93IGd1dHRlcj17MTB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPENvbCB4cz17MjR9IG1kPXs2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bWUgPyA8VXNlclByb2ZpbGUgLz4gOiA8TG9naW5Gb3JtIC8+IH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgICAgICAgICAgICAgPENvbCB4cz17MjR9IG1kPXsxMn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Db2w+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezZ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5naXRodWIuY29tL2phd29uMDQwN1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFkZSBieSBqYXdvbjA0MDdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICAgICAgICAgICAgPC9Sb3c+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC8+XG4gICAgKTtcbn07XG5cbkFwcExheW91dC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW4gOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQXBwTGF5b3V0OyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNhbGxiYWNrIiwiUHJvcFR5cGVzIiwiTGluayIsIk1lbnUiLCJJbnB1dCIsIlJvdyIsIkNvbCIsIlJvdXRlciIsInVzZVJvdXRlciIsInVzZVNlbGVjdG9yIiwidXNlRGlzcGF0Y2giLCJzdHlsZWQiLCJjcmVhdGVHbG9iYWxTdHlsZSIsInVzZUlucHV0IiwiVXNlclByb2ZpbGUiLCJMb2dpbkZvcm0iLCJTZWFyY2hJbnB1dCIsIlNlYXJjaCIsIkdsb2JhbCIsIkFwcExheW91dCIsImNoaWxkcmVuIiwibWUiLCJzdGF0ZSIsInVzZXIiLCJzZWFyY2hJbnB1dCIsIm9uQ2hhbmdlU2VhcmNoSW5wdXQiLCJvblNlYXJjaCIsInB1c2giLCJyb3V0ZXIiLCJwYXRobmFtZSIsImxhYmVsIiwia2V5IiwicHJvcFR5cGVzIiwibm9kZSIsImlzUmVxdWlyZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/AppLayout.js\n");

/***/ }),

/***/ "./components/FollowList.js":
/*!**********************************!*\
  !*** ./components/FollowList.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"prop-types\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons */ \"@ant-design/icons\");\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_user__WEBPACK_IMPORTED_MODULE_5__]);\n_actions_user__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/components/FollowList.js\";\n\n\n\n\n\n\n\n\n\nconst FollowList = ({\n  header,\n  data\n}) => {\n  const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__.useDispatch)();\n  const {\n    me\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_4__.useSelector)(state => state.user);\n\n  const onCancel = id => () => {\n    if (header = '팔로잉 목록') {\n      dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_5__.unFollowUser)(id));\n    }\n\n    if (header = '팔로워 목록') {\n      dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_5__.removeFollower)(id));\n    }\n  };\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.List, {\n      style: {\n        marginBottom: 20,\n        width: '100%'\n      },\n      grid: {\n        gutter: 4,\n        xs: 2,\n        md: 3\n      },\n      size: \"small\",\n      header: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(\"div\", {\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, undefined),\n      loadMore: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Button, {\n          style: {\n            width: '100%'\n          },\n          children: \"\\uB354 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, undefined),\n      bordered: true,\n      dataSource: data,\n      renderItem: item => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.List.Item, {\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Card, {\n          actions: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.StopOutlined, {\n            onClick: onCancel(item.id)\n          }, \"stop\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 43\n          }, undefined)],\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Card.Meta, {\n            description: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(\"div\", {\n              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: item.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, undefined)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, undefined)\n  }, void 0, false);\n};\n\nFollowList.propTypes = {\n  header: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string.isRequired),\n  data: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().array.isRequired)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FollowList);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0ZvbGxvd0xpc3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBRUEsTUFBTVUsVUFBVSxHQUFHLENBQUM7RUFBQ0MsTUFBRDtFQUFTQztBQUFULENBQUQsS0FBb0I7RUFDbkMsTUFBTUMsUUFBUSxHQUFHTix3REFBVyxFQUE1QjtFQUNBLE1BQU07SUFBRU87RUFBRixJQUFTUix3REFBVyxDQUFFUyxLQUFELElBQVdBLEtBQUssQ0FBQ0MsSUFBbEIsQ0FBMUI7O0VBQ0EsTUFBTUMsUUFBUSxHQUFJQyxFQUFELElBQVEsTUFBTTtJQUMzQixJQUFHUCxNQUFNLEdBQUcsUUFBWixFQUFxQjtNQUNqQkUsUUFBUSxDQUFDTCwyREFBWSxDQUFDVSxFQUFELENBQWIsQ0FBUjtJQUNIOztJQUNELElBQUdQLE1BQU0sR0FBRyxRQUFaLEVBQXFCO01BQ2pCRSxRQUFRLENBQUNKLDZEQUFjLENBQUNTLEVBQUQsQ0FBZixDQUFSO0lBQ0g7RUFDSixDQVBEOztFQVNBLG9CQUNJO0lBQUEsdUJBQ0ksOERBQUMsc0NBQUQ7TUFDSSxLQUFLLEVBQUk7UUFBQ0MsWUFBWSxFQUFFLEVBQWY7UUFBb0JDLEtBQUssRUFBQztNQUExQixDQURiO01BRUksSUFBSSxFQUFJO1FBQUNDLE1BQU0sRUFBRSxDQUFUO1FBQVlDLEVBQUUsRUFBRSxDQUFoQjtRQUFtQkMsRUFBRSxFQUFFO01BQXZCLENBRlo7TUFHSSxJQUFJLEVBQUcsT0FIWDtNQUlJLE1BQU0sZUFBSTtRQUFBLFVBQU1aO01BQU47UUFBQTtRQUFBO1FBQUE7TUFBQSxhQUpkO01BS0ksUUFBUSxlQUNKO1FBQUssS0FBSyxFQUFFO1VBQUVhLFNBQVMsRUFBRSxRQUFiO1VBQXdCQyxNQUFNLEVBQUU7UUFBaEMsQ0FBWjtRQUFBLHVCQUNJLDhEQUFDLHdDQUFEO1VBQVEsS0FBSyxFQUFFO1lBQUNMLEtBQUssRUFBRTtVQUFSLENBQWY7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUE7TUFESjtRQUFBO1FBQUE7UUFBQTtNQUFBLGFBTlI7TUFVSSxRQUFRLE1BVlo7TUFXSSxVQUFVLEVBQUlSLElBWGxCO01BWUksVUFBVSxFQUFLYyxJQUFELGlCQUNWLDhEQUFDLDJDQUFEO1FBQVcsS0FBSyxFQUFFO1VBQUVDLFNBQVMsRUFBRTtRQUFiLENBQWxCO1FBQUEsdUJBQ0ksOERBQUMsc0NBQUQ7VUFBTSxPQUFPLEVBQUksY0FBQyw4REFBQywyREFBRDtZQUF5QixPQUFPLEVBQUVWLFFBQVEsQ0FBQ1MsSUFBSSxDQUFDUixFQUFOO1VBQTFDLEdBQWtCLE1BQWxCO1lBQUE7WUFBQTtZQUFBO1VBQUEsYUFBRCxDQUFqQjtVQUFBLHVCQUNJLDhEQUFDLDJDQUFEO1lBQVcsV0FBVyxlQUNsQjtjQUFBLHVCQUNJO2dCQUFLLEtBQUssRUFBRTtrQkFBRU0sU0FBUyxFQUFHO2dCQUFkLENBQVo7Z0JBQUEsVUFBdUNFLElBQUksQ0FBQ0U7Y0FBNUM7Z0JBQUE7Z0JBQUE7Z0JBQUE7Y0FBQTtZQURKO2NBQUE7Y0FBQTtjQUFBO1lBQUE7VUFESjtZQUFBO1lBQUE7WUFBQTtVQUFBO1FBREo7VUFBQTtVQUFBO1VBQUE7UUFBQTtNQURKO1FBQUE7UUFBQTtRQUFBO01BQUE7SUFiUjtNQUFBO01BQUE7TUFBQTtJQUFBO0VBREosaUJBREo7QUE0QkgsQ0F4Q0Q7O0FBMENBbEIsVUFBVSxDQUFDbUIsU0FBWCxHQUF1QjtFQUNuQmxCLE1BQU0sRUFBR1YscUVBRFU7RUFFbkJXLElBQUksRUFBR1gsb0VBQTBCOEI7QUFGZCxDQUF2QjtBQUtBLGlFQUFlckIsVUFBZixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9jb21wb25lbnRzL0ZvbGxvd0xpc3QuanM/ODQzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IExpc3QsIEJ1dHRvbiwgQ2FyZCB9IGZyb20gJ2FudGQnO1xuaW1wb3J0IHsgU3RvcE91dGxpbmVkIH0gZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMnO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgdW5Gb2xsb3dVc2VyICwgcmVtb3ZlRm9sbG93ZXIgfSBmcm9tICcuLi9hY3Rpb25zL3VzZXInO1xuXG5jb25zdCBGb2xsb3dMaXN0ID0gKHtoZWFkZXIsIGRhdGF9KSA9PiB7XG4gICAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICAgIGNvbnN0IHsgbWUgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudXNlcik7XG4gICAgY29uc3Qgb25DYW5jZWwgPSAoaWQpID0+ICgpID0+IHtcbiAgICAgICAgaWYoaGVhZGVyID0gJ+2MlOuhnOyeiSDrqqnroZ0nKXtcbiAgICAgICAgICAgIGRpc3BhdGNoKHVuRm9sbG93VXNlcihpZCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmKGhlYWRlciA9ICftjJTroZzsm4wg66qp66GdJyl7XG4gICAgICAgICAgICBkaXNwYXRjaChyZW1vdmVGb2xsb3dlcihpZCkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybihcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxMaXN0XG4gICAgICAgICAgICAgICAgc3R5bGUgPSB7e21hcmdpbkJvdHRvbTogMjAgLCB3aWR0aDonMTAwJSd9fVxuICAgICAgICAgICAgICAgIGdyaWQgPSB7e2d1dHRlcjogNCwgeHM6IDIsIG1kOiAzfX1cbiAgICAgICAgICAgICAgICBzaXplID0gXCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgaGVhZGVyID0gezxkaXY+e2hlYWRlcn08L2Rpdj59XG4gICAgICAgICAgICAgICAgbG9hZE1vcmUgPSB7XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgdGV4dEFsaWduOiAnY2VudGVyJyAsIG1hcmdpbjogJzEwcHggMCcgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHN0eWxlPXt7d2lkdGg6ICcxMDAlJ319PuuNlCDrs7TquLA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJvcmRlcmVkXG4gICAgICAgICAgICAgICAgZGF0YVNvdXJjZSA9IHtkYXRhfVxuICAgICAgICAgICAgICAgIHJlbmRlckl0ZW0gPSB7KGl0ZW0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgPExpc3QuSXRlbSBzdHlsZT17eyBtYXJnaW5Ub3A6IDIwIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgPENhcmQgYWN0aW9ucyA9IHtbPFN0b3BPdXRsaW5lZCBrZXk9XCJzdG9wXCIgb25DbGljaz17b25DYW5jZWwoaXRlbS5pZCl9Lz5dfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2FyZC5NZXRhIGRlc2NyaXB0aW9uID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyB0ZXh0QWxpZ24gOiAnY2VudGVyJyB9fT57aXRlbS5uaWNrbmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgICAgICAgICAgIDwvTGlzdC5JdGVtPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICApO1xufTtcblxuRm9sbG93TGlzdC5wcm9wVHlwZXMgPSB7XG4gICAgaGVhZGVyIDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGRhdGEgOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEZvbGxvd0xpc3Q7Il0sIm5hbWVzIjpbIlJlYWN0IiwiUHJvcFR5cGVzIiwiTGlzdCIsIkJ1dHRvbiIsIkNhcmQiLCJTdG9wT3V0bGluZWQiLCJ1c2VTZWxlY3RvciIsInVzZURpc3BhdGNoIiwidW5Gb2xsb3dVc2VyIiwicmVtb3ZlRm9sbG93ZXIiLCJGb2xsb3dMaXN0IiwiaGVhZGVyIiwiZGF0YSIsImRpc3BhdGNoIiwibWUiLCJzdGF0ZSIsInVzZXIiLCJvbkNhbmNlbCIsImlkIiwibWFyZ2luQm90dG9tIiwid2lkdGgiLCJndXR0ZXIiLCJ4cyIsIm1kIiwidGV4dEFsaWduIiwibWFyZ2luIiwiaXRlbSIsIm1hcmdpblRvcCIsIm5pY2tuYW1lIiwicHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/FollowList.js\n");

/***/ }),

/***/ "./components/LoginForm.js":
/*!*********************************!*\
  !*** ./components/LoginForm.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"prop-types\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _hooks_useInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useInput */ \"./components/hooks/useInput.js\");\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_user__WEBPACK_IMPORTED_MODULE_7__]);\n_actions_user__WEBPACK_IMPORTED_MODULE_7__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/components/LoginForm.js\";\n\n\n\n\n\n\n\n\n\n\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const {\n    me,\n    logInLoading,\n    logInError\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_2__.useSelector)(state => state.user);\n  const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_2__.useDispatch)();\n  const [email, onChangeEmail] = (0,_hooks_useInput__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('');\n  const [password, onChangePassword] = (0,_hooks_useInput__WEBPACK_IMPORTED_MODULE_6__[\"default\"])('');\n  const onSubmitForm = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {\n    console.log(email, password);\n    dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_7__.logIn)({\n      email,\n      password\n    }));\n  }, [email, password]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Form, {\n      className: \"!p-3\",\n      onFinish: onSubmitForm,\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"div\", {\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"div\", {\n        className: \"mt-8 text-right space-x-2\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_3__.Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: logInLoading,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n          href: \"/signup\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxDEV)(\"button\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 42\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, undefined)\n  }, void 0, false);\n}; // LoginForm.propTypes = {\n//     onSubmitForm : PropTypes.func.isRequired,\n// }\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoginForm);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0xvZ2luRm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBRUEsTUFBTWMsU0FBUyxHQUFHLENBQUM7RUFBRUM7QUFBRixDQUFELEtBQXVCO0VBQ3JDLE1BQU07SUFBRUMsRUFBRjtJQUFPQyxZQUFQO0lBQXNCQztFQUF0QixJQUFxQ2Isd0RBQVcsQ0FBRWMsS0FBRCxJQUFXQSxLQUFLLENBQUNDLElBQWxCLENBQXREO0VBQ0EsTUFBTUMsUUFBUSxHQUFHZix3REFBVyxFQUE1QjtFQUVBLE1BQU0sQ0FBQ2dCLEtBQUQsRUFBUUMsYUFBUixJQUF5QlgsMkRBQVEsQ0FBQyxFQUFELENBQXZDO0VBQ0EsTUFBTSxDQUFDWSxRQUFELEVBQVdDLGdCQUFYLElBQStCYiwyREFBUSxDQUFDLEVBQUQsQ0FBN0M7RUFFQSxNQUFNYyxZQUFZLEdBQUd4QixrREFBVyxDQUFFeUIsQ0FBRCxJQUFPO0lBQ3BDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWVAsS0FBWixFQUFtQkUsUUFBbkI7SUFDQUgsUUFBUSxDQUFDUixvREFBSyxDQUFDO01BQ1hTLEtBRFc7TUFFWEU7SUFGVyxDQUFELENBQU4sQ0FBUjtFQUlILENBTitCLEVBTTlCLENBQUNGLEtBQUQsRUFBUUUsUUFBUixDQU44QixDQUFoQztFQVFBckIsZ0RBQVMsQ0FBQyxNQUFNO0lBQ1osSUFBR2UsVUFBSCxFQUFjO01BQ1ZZLEtBQUssQ0FBQ1osVUFBRCxDQUFMO0lBQ0g7RUFDSixDQUpRLEVBSVAsQ0FBQ0EsVUFBRCxDQUpPLENBQVQ7RUFNQSxvQkFDSTtJQUFBLHVCQUNJLDhEQUFDLHNDQUFEO01BQU0sU0FBUyxFQUFDLE1BQWhCO01BQXVCLFFBQVEsRUFBRVEsWUFBakM7TUFBQSx3QkFDSTtRQUFBLHdCQUNJO1VBQU8sT0FBTyxFQUFDLFlBQWY7VUFBQTtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFESixlQUVJO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFGSixlQUdJLDhEQUFDLHVDQUFEO1VBQU8sSUFBSSxFQUFDLFlBQVo7VUFBeUIsSUFBSSxFQUFDLE9BQTlCO1VBQXNDLEtBQUssRUFBRUosS0FBN0M7VUFBb0QsUUFBUSxFQUFFQyxhQUE5RDtVQUE2RSxRQUFRO1FBQXJGO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFISjtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFESixlQU1JO1FBQUEsd0JBQ0k7VUFBTyxPQUFPLEVBQUMsZUFBZjtVQUFBO1FBQUE7VUFBQTtVQUFBO1VBQUE7UUFBQSxhQURKLGVBRUk7VUFBQTtVQUFBO1VBQUE7UUFBQSxhQUZKLGVBR0ksOERBQUMsdUNBQUQ7VUFBTyxJQUFJLEVBQUMsZUFBWjtVQUE0QixJQUFJLEVBQUMsVUFBakM7VUFBNEMsS0FBSyxFQUFFQyxRQUFuRDtVQUE2RCxRQUFRLEVBQUVDLGdCQUF2RTtVQUF5RixRQUFRO1FBQWpHO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFISjtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFOSixlQVdJO1FBQUssU0FBUyxFQUFDLDJCQUFmO1FBQUEsd0JBQ0ksOERBQUMsd0NBQUQ7VUFBUSxJQUFJLEVBQUMsU0FBYjtVQUF1QixRQUFRLEVBQUMsUUFBaEM7VUFBeUMsT0FBTyxFQUFFUixZQUFsRDtVQUFBO1FBQUE7VUFBQTtVQUFBO1VBQUE7UUFBQSxhQURKLGVBRUksOERBQUMsa0RBQUQ7VUFBTSxJQUFJLEVBQUMsU0FBWDtVQUFBLHVCQUFxQjtZQUFBO1VBQUE7WUFBQTtZQUFBO1lBQUE7VUFBQTtRQUFyQjtVQUFBO1VBQUE7VUFBQTtRQUFBLGFBRko7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBLGFBWEo7SUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0VBREosaUJBREo7QUFvQkgsQ0F6Q0QsRUEyQ0E7QUFDQTtBQUNBOzs7QUFFQSxpRUFBZUgsU0FBZixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9jb21wb25lbnRzL0xvZ2luRm9ybS5qcz9lY2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCAsIHsgdXNlU3RhdGUgLCB1c2VDYWxsYmFjayAsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciAsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgRm9ybSAsIElucHV0ICwgQnV0dG9uIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IFJvdXRlciBmcm9tICduZXh0L3JvdXRlcic7XG5pbXBvcnQgdXNlSW5wdXQgZnJvbSAnLi9ob29rcy91c2VJbnB1dCc7XG5pbXBvcnQgeyBsb2dJbiB9IGZyb20gJy4uL2FjdGlvbnMvdXNlcic7XG5cbmNvbnN0IExvZ2luRm9ybSA9ICh7IHNldElzTG9nZ2VkSW4gfSkgPT4ge1xuICAgIGNvbnN0IHsgbWUgLCBsb2dJbkxvYWRpbmcgLCBsb2dJbkVycm9yIH0gPSB1c2VTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnVzZXIpO1xuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblxuICAgIGNvbnN0IFtlbWFpbCwgb25DaGFuZ2VFbWFpbF0gPSB1c2VJbnB1dCgnJyk7XG4gICAgY29uc3QgW3Bhc3N3b3JkLCBvbkNoYW5nZVBhc3N3b3JkXSA9IHVzZUlucHV0KCcnKTtcblxuICAgIGNvbnN0IG9uU3VibWl0Rm9ybSA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVtYWlsLCBwYXNzd29yZCk7XG4gICAgICAgIGRpc3BhdGNoKGxvZ0luKHtcbiAgICAgICAgICAgIGVtYWlsLCBcbiAgICAgICAgICAgIHBhc3N3b3JkXG4gICAgICAgIH0pKTtcbiAgICB9LFtlbWFpbCwgcGFzc3dvcmRdKTtcbiAgICBcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZihsb2dJbkVycm9yKXtcbiAgICAgICAgICAgIGFsZXJ0KGxvZ0luRXJyb3IpO1xuICAgICAgICB9XG4gICAgfSxbbG9nSW5FcnJvcl0pO1xuXG4gICAgcmV0dXJuKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPEZvcm0gY2xhc3NOYW1lPVwiIXAtM1wiIG9uRmluaXNoPXtvblN1Ym1pdEZvcm19PlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidXNlci1lbWFpbFwiPuydtOuplOydvDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICA8SW5wdXQgbmFtZT1cInVzZXItZW1haWxcIiB0eXBlPVwiZW1haWxcIiB2YWx1ZT17ZW1haWx9IG9uQ2hhbmdlPXtvbkNoYW5nZUVtYWlsfSByZXF1aXJlZCAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwidXNlci1wYXNzd29yZFwiPuu5hOuwgOuyiO2YuDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICA8SW5wdXQgbmFtZT1cInVzZXItcGFzc3dvcmRcIiB0eXBlPVwicGFzc3dvcmRcIiB2YWx1ZT17cGFzc3dvcmR9IG9uQ2hhbmdlPXtvbkNoYW5nZVBhc3N3b3JkfSByZXF1aXJlZCAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtOCB0ZXh0LXJpZ2h0IHNwYWNlLXgtMlwiPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgaHRtbFR5cGU9XCJzdWJtaXRcIiBsb2FkaW5nPXtsb2dJbkxvYWRpbmd9PuuhnOq3uOyduDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3NpZ251cFwiPjxidXR0b24+7ZqM7JuQ6rCA7J6FPC9idXR0b24+PC9MaW5rPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9Gb3JtPlxuICAgICAgICA8Lz5cbiAgICApO1xufTtcblxuLy8gTG9naW5Gb3JtLnByb3BUeXBlcyA9IHtcbi8vICAgICBvblN1Ym1pdEZvcm0gOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuLy8gfVxuXG5leHBvcnQgZGVmYXVsdCBMb2dpbkZvcm07Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsInVzZUVmZmVjdCIsIlByb3BUeXBlcyIsInVzZVNlbGVjdG9yIiwidXNlRGlzcGF0Y2giLCJGb3JtIiwiSW5wdXQiLCJCdXR0b24iLCJMaW5rIiwiUm91dGVyIiwidXNlSW5wdXQiLCJsb2dJbiIsIkxvZ2luRm9ybSIsInNldElzTG9nZ2VkSW4iLCJtZSIsImxvZ0luTG9hZGluZyIsImxvZ0luRXJyb3IiLCJzdGF0ZSIsInVzZXIiLCJkaXNwYXRjaCIsImVtYWlsIiwib25DaGFuZ2VFbWFpbCIsInBhc3N3b3JkIiwib25DaGFuZ2VQYXNzd29yZCIsIm9uU3VibWl0Rm9ybSIsImUiLCJjb25zb2xlIiwibG9nIiwiYWxlcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/LoginForm.js\n");

/***/ }),

/***/ "./components/NicknameEditForm.js":
/*!****************************************!*\
  !*** ./components/NicknameEditForm.js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\n/* harmony import */ var _hooks_useInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useInput */ \"./components/hooks/useInput.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_user__WEBPACK_IMPORTED_MODULE_3__]);\n_actions_user__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/components/NicknameEditForm.js\";\n\n\n\n\n\n\n\n\nconst NicknameEditForm = () => {\n  const {\n    me\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useSelector)(state => state.user);\n  const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch)();\n  const [nickname, onChangeNickname] = (0,_hooks_useInput__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(me?.nickname || '');\n  const onSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_3__.changeNickname)({\n      nickname\n    }));\n  }, [nickname]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Form, {\n      className: \"!mb-5 border !p-5 w-full\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Input.Search, {\n        value: nickname,\n        onChange: onChangeNickname,\n        addonBefore: \"\\uB2C9\\uB124\\uC784\",\n        enterButton: \"\\uC218\\uC815\",\n        onSearch: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, undefined)\n  }, void 0, false);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NicknameEditForm);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL05pY2tuYW1lRWRpdEZvcm0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUVBLE1BQU1RLGdCQUFnQixHQUFHLE1BQU07RUFDM0IsTUFBTTtJQUFFQztFQUFGLElBQVNQLHdEQUFXLENBQUVRLEtBQUQsSUFBV0EsS0FBSyxDQUFDQyxJQUFsQixDQUExQjtFQUNBLE1BQU1DLFFBQVEsR0FBR1Qsd0RBQVcsRUFBNUI7RUFDQSxNQUFNLENBQUNVLFFBQUQsRUFBWUMsZ0JBQVosSUFBZ0NQLDJEQUFRLENBQUNFLEVBQUUsRUFBRUksUUFBSixJQUFnQixFQUFqQixDQUE5QztFQUNBLE1BQU1FLFFBQVEsR0FBR2Qsa0RBQVcsQ0FBQyxNQUFNO0lBQy9CVyxRQUFRLENBQUNOLDZEQUFjLENBQUM7TUFBQ087SUFBRCxDQUFELENBQWYsQ0FBUjtFQUNILENBRjJCLEVBRTFCLENBQUNBLFFBQUQsQ0FGMEIsQ0FBNUI7RUFJQSxvQkFDSTtJQUFBLHVCQUNJLDhEQUFDLHNDQUFEO01BQU0sU0FBUyxFQUFDLDBCQUFoQjtNQUEyQyxRQUFRLEVBQUVFLFFBQXJEO01BQUEsdUJBQ0ksOERBQUMsOENBQUQ7UUFDSSxLQUFLLEVBQUVGLFFBRFg7UUFFSSxRQUFRLEVBQUVDLGdCQUZkO1FBR0ksV0FBVyxFQUFDLG9CQUhoQjtRQUlJLFdBQVcsRUFBQyxjQUpoQjtRQUtJLFFBQVEsRUFBRUM7TUFMZDtRQUFBO1FBQUE7UUFBQTtNQUFBO0lBREo7TUFBQTtNQUFBO01BQUE7SUFBQTtFQURKLGlCQURKO0FBYUgsQ0FyQkQ7O0FBdUJBLGlFQUFlUCxnQkFBZixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9jb21wb25lbnRzL05pY2tuYW1lRWRpdEZvcm0uanM/MGFhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgLCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IgLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IEZvcm0sIElucHV0IH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyBjaGFuZ2VOaWNrbmFtZSB9IGZyb20gJy4uL2FjdGlvbnMvdXNlcic7IFxuaW1wb3J0IHVzZUlucHV0IGZyb20gJy4vaG9va3MvdXNlSW5wdXQnO1xuXG5jb25zdCBOaWNrbmFtZUVkaXRGb3JtID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgbWUgfSA9IHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudXNlcik7XG4gICAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICAgIGNvbnN0IFtuaWNrbmFtZSAsIG9uQ2hhbmdlTmlja25hbWVdID0gdXNlSW5wdXQobWU/Lm5pY2tuYW1lIHx8ICcnKTtcbiAgICBjb25zdCBvblN1Ym1pdCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgZGlzcGF0Y2goY2hhbmdlTmlja25hbWUoe25pY2tuYW1lfSkpO1xuICAgIH0sW25pY2tuYW1lXSk7XG4gICAgXG4gICAgcmV0dXJuKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPEZvcm0gY2xhc3NOYW1lPVwiIW1iLTUgYm9yZGVyICFwLTUgdy1mdWxsXCIgb25GaW5pc2g9e29uU3VibWl0fT5cbiAgICAgICAgICAgICAgICA8SW5wdXQuU2VhcmNoXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtuaWNrbmFtZX1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlTmlja25hbWV9IFxuICAgICAgICAgICAgICAgICAgICBhZGRvbkJlZm9yZT1cIuuLieuEpOyehFwiXG4gICAgICAgICAgICAgICAgICAgIGVudGVyQnV0dG9uPVwi7IiY7KCVXCIgXG4gICAgICAgICAgICAgICAgICAgIG9uU2VhcmNoPXtvblN1Ym1pdH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Gb3JtPlxuICAgICAgICA8Lz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTmlja25hbWVFZGl0Rm9ybTsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDYWxsYmFjayIsInVzZVNlbGVjdG9yIiwidXNlRGlzcGF0Y2giLCJGb3JtIiwiSW5wdXQiLCJjaGFuZ2VOaWNrbmFtZSIsInVzZUlucHV0IiwiTmlja25hbWVFZGl0Rm9ybSIsIm1lIiwic3RhdGUiLCJ1c2VyIiwiZGlzcGF0Y2giLCJuaWNrbmFtZSIsIm9uQ2hhbmdlTmlja25hbWUiLCJvblN1Ym1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/NicknameEditForm.js\n");

/***/ }),

/***/ "./components/UserProfile.js":
/*!***********************************!*\
  !*** ./components/UserProfile.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ \"antd\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_user__WEBPACK_IMPORTED_MODULE_4__]);\n_actions_user__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/components/UserProfile.js\";\n\n\n\n\n\n\n\n\nconst UserProfile = () => {\n  const dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();\n  const {\n    logoutLoading,\n    me\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(state => state.user);\n  const nickname = me?.nickname;\n  const avatarText = nickname?.split(\"\")[0];\n  const onLogOut = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_4__.logOut)());\n  }, []);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Card, {\n      actions: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n          href: `/user/${me.id}`,\n          children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 31\n          }, undefined), me?.Posts?.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, undefined)\n      }, \"twit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n          href: `/profile`,\n          children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, undefined), me?.Followings?.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, undefined)\n      }, \"followings\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n          href: `/profile`,\n          children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 32\n          }, undefined), me?.Followers?.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, undefined)\n      }, \"followers\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, undefined)],\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Card.Meta, {\n        avatar: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n          href: `/user/${me.id}`,\n          prefetch: false,\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Avatar, {\n            children: avatarText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, undefined),\n        title: nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(antd__WEBPACK_IMPORTED_MODULE_2__.Button, {\n        className: \"mt-4\",\n        onClick: onLogOut,\n        loading: logoutLoading,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, undefined)\n  }, void 0, false);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UserProfile);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1VzZXJQcm9maWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBRUEsTUFBTVMsV0FBVyxHQUFHLE1BQU07RUFDdEIsTUFBTUMsUUFBUSxHQUFHSCx3REFBVyxFQUE1QjtFQUNBLE1BQU07SUFBRUksYUFBRjtJQUFrQkM7RUFBbEIsSUFBeUJOLHdEQUFXLENBQUVPLEtBQUQsSUFBV0EsS0FBSyxDQUFDQyxJQUFsQixDQUExQztFQUNBLE1BQU1DLFFBQVEsR0FBR0gsRUFBRSxFQUFFRyxRQUFyQjtFQUNBLE1BQU1DLFVBQVUsR0FBR0QsUUFBUSxFQUFFRSxLQUFWLENBQWdCLEVBQWhCLEVBQW9CLENBQXBCLENBQW5CO0VBQ0EsTUFBTUMsUUFBUSxHQUFHakIsa0RBQVcsQ0FBQyxNQUFNO0lBQy9CUyxRQUFRLENBQUNGLHFEQUFNLEVBQVAsQ0FBUjtFQUNILENBRjJCLEVBRTFCLEVBRjBCLENBQTVCO0VBSUEsb0JBQ0k7SUFBQSx1QkFDSSw4REFBQyxzQ0FBRDtNQUNJLE9BQU8sRUFBRSxjQUNMO1FBQUEsdUJBQ0ksOERBQUMsa0RBQUQ7VUFBTSxJQUFJLEVBQUcsU0FBUUksRUFBRSxDQUFDTyxFQUFHLEVBQTNCO1VBQUEsd0NBQ007WUFBQTtZQUFBO1lBQUE7VUFBQSxhQUROLEVBQ2FQLEVBQUUsRUFBRVEsS0FBSixFQUFXQyxNQUR4QjtRQUFBO1VBQUE7VUFBQTtVQUFBO1FBQUE7TUFESixHQUFTLE1BQVQ7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQURLLGVBTUw7UUFBQSx1QkFDSSw4REFBQyxrREFBRDtVQUFNLElBQUksRUFBRyxVQUFiO1VBQUEsOENBQ087WUFBQTtZQUFBO1lBQUE7VUFBQSxhQURQLEVBQ2NULEVBQUUsRUFBRVUsVUFBSixFQUFnQkQsTUFEOUI7UUFBQTtVQUFBO1VBQUE7VUFBQTtRQUFBO01BREosR0FBUyxZQUFUO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFOSyxlQVdMO1FBQUEsdUJBQ0ksOERBQUMsa0RBQUQ7VUFBTSxJQUFJLEVBQUcsVUFBYjtVQUFBLDhDQUNPO1lBQUE7WUFBQTtZQUFBO1VBQUEsYUFEUCxFQUNjVCxFQUFFLEVBQUVXLFNBQUosRUFBZUYsTUFEN0I7UUFBQTtVQUFBO1VBQUE7VUFBQTtRQUFBO01BREosR0FBUyxXQUFUO1FBQUE7UUFBQTtRQUFBO01BQUEsYUFYSyxDQURiO01BQUEsd0JBbUJJLDhEQUFDLDJDQUFEO1FBQ0ksTUFBTSxlQUNGLDhEQUFDLGtEQUFEO1VBQU0sSUFBSSxFQUFHLFNBQVFULEVBQUUsQ0FBQ08sRUFBRyxFQUEzQjtVQUE4QixRQUFRLEVBQUUsS0FBeEM7VUFBQSx1QkFDSSw4REFBQyx3Q0FBRDtZQUFBLFVBQVNIO1VBQVQ7WUFBQTtZQUFBO1lBQUE7VUFBQTtRQURKO1VBQUE7VUFBQTtVQUFBO1FBQUEsYUFGUjtRQU1JLEtBQUssRUFBSUQ7TUFOYjtRQUFBO1FBQUE7UUFBQTtNQUFBLGFBbkJKLGVBMkJJLDhEQUFDLHdDQUFEO1FBQVEsU0FBUyxFQUFDLE1BQWxCO1FBQXlCLE9BQU8sRUFBRUcsUUFBbEM7UUFBNEMsT0FBTyxFQUFFUCxhQUFyRDtRQUFBO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQTNCSjtJQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7RUFESixpQkFESjtBQWlDSCxDQTFDRDs7QUE0Q0EsaUVBQWVGLFdBQWYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vY29tcG9uZW50cy9Vc2VyUHJvZmlsZS5qcz83MTViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyBDYXJkICwgQXZhdGFyICwgQnV0dG9uIH0gZnJvbSAnYW50ZCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciAsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgbG9nT3V0IH0gZnJvbSAnLi4vYWN0aW9ucy91c2VyJyA7XG5cbmNvbnN0IFVzZXJQcm9maWxlID0gKCkgPT4ge1xuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgICBjb25zdCB7IGxvZ291dExvYWRpbmcgLCBtZSB9ID0gdXNlU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS51c2VyKTtcbiAgICBjb25zdCBuaWNrbmFtZSA9IG1lPy5uaWNrbmFtZTtcbiAgICBjb25zdCBhdmF0YXJUZXh0ID0gbmlja25hbWU/LnNwbGl0KFwiXCIpWzBdO1xuICAgIGNvbnN0IG9uTG9nT3V0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBkaXNwYXRjaChsb2dPdXQoKSk7XG4gICAgfSxbXSk7XG5cbiAgICByZXR1cm4oXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgICAgIGFjdGlvbnM9e1tcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJ0d2l0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL3VzZXIvJHttZS5pZH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDsp7nsp7k8YnIgLz57bWU/LlBvc3RzPy5sZW5ndGh9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+ICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+LFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT1cImZvbGxvd2luZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvcHJvZmlsZWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIO2MlOuhnOyeiTxiciAvPnttZT8uRm9sbG93aW5ncz8ubGVuZ3RofVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PixcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9XCJmb2xsb3dlcnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvcHJvZmlsZWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIO2MlOuhnOybjDxiciAvPnttZT8uRm9sbG93ZXJzPy5sZW5ndGh9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+ICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPENhcmQuTWV0YVxuICAgICAgICAgICAgICAgICAgICBhdmF0YXIgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL3VzZXIvJHttZS5pZH1gfSBwcmVmZXRjaD17ZmFsc2V9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBdmF0YXI+e2F2YXRhclRleHR9PC9BdmF0YXI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSB7bmlja25hbWV9ICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJtdC00XCIgb25DbGljaz17b25Mb2dPdXR9IGxvYWRpbmc9e2xvZ291dExvYWRpbmd9PuuhnOq3uOyVhOybgzwvQnV0dG9uPlxuICAgICAgICAgICAgPC9DYXJkPlxuICAgICAgICA8Lz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlclByb2ZpbGU7Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ2FsbGJhY2siLCJMaW5rIiwiQ2FyZCIsIkF2YXRhciIsIkJ1dHRvbiIsInVzZVNlbGVjdG9yIiwidXNlRGlzcGF0Y2giLCJsb2dPdXQiLCJVc2VyUHJvZmlsZSIsImRpc3BhdGNoIiwibG9nb3V0TG9hZGluZyIsIm1lIiwic3RhdGUiLCJ1c2VyIiwibmlja25hbWUiLCJhdmF0YXJUZXh0Iiwic3BsaXQiLCJvbkxvZ091dCIsImlkIiwiUG9zdHMiLCJsZW5ndGgiLCJGb2xsb3dpbmdzIiwiRm9sbG93ZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/UserProfile.js\n");

/***/ }),

/***/ "./components/hooks/useInput.js":
/*!**************************************!*\
  !*** ./components/hooks/useInput.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((initialValue = null) => {\n  const {\n    0: value,\n    1: setValue\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);\n  const handler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {\n    setValue(e.target.value);\n    console.log(setValue);\n  }, [value]);\n  return [value, handler, setValue];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2hvb2tzL3VzZUlucHV0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUEsaUVBQWUsQ0FBQ0csWUFBWSxHQUFHLElBQWhCLEtBQXlCO0VBQ3BDLE1BQU07SUFBQSxHQUFDQyxLQUFEO0lBQUEsR0FBUUM7RUFBUixJQUFvQkosK0NBQVEsQ0FBQ0UsWUFBRCxDQUFsQztFQUNBLE1BQU1HLE9BQU8sR0FBR0osa0RBQVcsQ0FBRUssQ0FBRCxJQUFPO0lBQy9CRixRQUFRLENBQUNFLENBQUMsQ0FBQ0MsTUFBRixDQUFTSixLQUFWLENBQVI7SUFDQUssT0FBTyxDQUFDQyxHQUFSLENBQVlMLFFBQVo7RUFDSCxDQUgwQixFQUd4QixDQUFDRCxLQUFELENBSHdCLENBQTNCO0VBSUEsT0FBTyxDQUFFQSxLQUFGLEVBQVNFLE9BQVQsRUFBbUJELFFBQW5CLENBQVA7QUFDSCxDQVBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9jb21wb25lbnRzL2hvb2tzL3VzZUlucHV0LmpzPzU3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ICwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IChpbml0aWFsVmFsdWUgPSBudWxsKSA9PiB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShpbml0aWFsVmFsdWUpO1xuICAgIGNvbnN0IGhhbmRsZXIgPSB1c2VDYWxsYmFjaygoZSkgPT4ge1xuICAgICAgICBzZXRWYWx1ZShlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHNldFZhbHVlKTtcbiAgICB9LCBbdmFsdWVdKTtcbiAgICByZXR1cm4gWyB2YWx1ZSwgaGFuZGxlciAsIHNldFZhbHVlIF07XG59OyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJpbml0aWFsVmFsdWUiLCJ2YWx1ZSIsInNldFZhbHVlIiwiaGFuZGxlciIsImUiLCJ0YXJnZXQiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/hooks/useInput.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/add-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.addBasePath = addBasePath;\n\nvar _addPathPrefix = __webpack_require__(/*! ../shared/lib/router/utils/add-path-prefix */ \"../shared/lib/router/utils/add-path-prefix\");\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nconst basePath =  false || '';\n\nfunction addBasePath(path, required) {\n  if (false) {}\n\n  return (0, _normalizeTrailingSlash).normalizePathTrailingSlash((0, _addPathPrefix).addPathPrefix(path, basePath));\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxtQkFBQSxHQUFzQkUsV0FBdEI7O0FBQ0EsSUFBSUMsY0FBYyxHQUFHQyxtQkFBTyxDQUFDLDhGQUFELENBQTVCOztBQUNBLElBQUlDLHVCQUF1QixHQUFHRCxtQkFBTyxDQUFDLCtGQUFELENBQXJDOztBQUNBLE1BQU1FLFFBQVEsR0FBR0MsTUFBQSxJQUFzQyxFQUF2RDs7QUFDQSxTQUFTTCxXQUFULENBQXFCUSxJQUFyQixFQUEyQkMsUUFBM0IsRUFBcUM7RUFDakMsSUFBSUosS0FBSixFQUFnRCxFQUkvQzs7RUFDRCxPQUFPLENBQUMsR0FBR0YsdUJBQUosRUFBNkJRLDBCQUE3QixDQUF3RCxDQUFDLEdBQUdWLGNBQUosRUFBb0JXLGFBQXBCLENBQWtDSixJQUFsQyxFQUF3Q0osUUFBeEMsQ0FBeEQsQ0FBUDtBQUNIOztBQUVELElBQUksQ0FBQyxPQUFPTixPQUFPLENBQUNlLE9BQWYsS0FBMkIsVUFBM0IsSUFBMEMsT0FBT2YsT0FBTyxDQUFDZSxPQUFmLEtBQTJCLFFBQTNCLElBQXVDZixPQUFPLENBQUNlLE9BQVIsS0FBb0IsSUFBdEcsS0FBZ0gsT0FBT2YsT0FBTyxDQUFDZSxPQUFSLENBQWdCQyxVQUF2QixLQUFzQyxXQUExSixFQUF1SztFQUNyS2xCLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBTyxDQUFDZSxPQUE5QixFQUF1QyxZQUF2QyxFQUFxRDtJQUFFZCxLQUFLLEVBQUU7RUFBVCxDQUFyRDtFQUNBSCxNQUFNLENBQUNtQixNQUFQLENBQWNqQixPQUFPLENBQUNlLE9BQXRCLEVBQStCZixPQUEvQjtFQUNBa0IsTUFBTSxDQUFDbEIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDZSxPQUF6QjtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtYmFzZS1wYXRoLmpzPzYxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmFkZEJhc2VQYXRoID0gYWRkQmFzZVBhdGg7XG52YXIgX2FkZFBhdGhQcmVmaXggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4XCIpO1xudmFyIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoID0gcmVxdWlyZShcIi4vbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoXCIpO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gYWRkQmFzZVBhdGgocGF0aCwgcmVxdWlyZWQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX01BTlVBTF9DTElFTlRfQkFTRV9QQVRIKSB7XG4gICAgICAgIGlmICghcmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoKCgwLCBfYWRkUGF0aFByZWZpeCkuYWRkUGF0aFByZWZpeChwYXRoLCBiYXNlUGF0aCkpO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFkZEJhc2VQYXRoIiwiX2FkZFBhdGhQcmVmaXgiLCJyZXF1aXJlIiwiX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2giLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsInJlcXVpcmVkIiwiX19ORVhUX01BTlVBTF9DTElFTlRfQkFTRV9QQVRIIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJhZGRQYXRoUHJlZml4IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/add-locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/client/add-locale.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.addLocale = void 0;\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ./normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nconst addLocale = (path, ...args) => {\n  if (false) {}\n\n  return path;\n};\n\nexports.addLocale = addLocale;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxpQkFBQSxHQUFvQixLQUFLLENBQXpCOztBQUNBLElBQUlHLHVCQUF1QixHQUFHQyxtQkFBTyxDQUFDLCtGQUFELENBQXJDOztBQUNBLE1BQU1GLFNBQVMsR0FBRyxDQUFDRyxJQUFELEVBQU8sR0FBR0MsSUFBVixLQUFpQjtFQUMvQixJQUFJQyxLQUFKLEVBQXFDLEVBRXBDOztFQUNELE9BQU9GLElBQVA7QUFDSCxDQUxEOztBQU1BTCxpQkFBQSxHQUFvQkUsU0FBcEI7O0FBRUEsSUFBSSxDQUFDLE9BQU9GLE9BQU8sQ0FBQ1csT0FBZixLQUEyQixVQUEzQixJQUEwQyxPQUFPWCxPQUFPLENBQUNXLE9BQWYsS0FBMkIsUUFBM0IsSUFBdUNYLE9BQU8sQ0FBQ1csT0FBUixLQUFvQixJQUF0RyxLQUFnSCxPQUFPWCxPQUFPLENBQUNXLE9BQVIsQ0FBZ0JDLFVBQXZCLEtBQXNDLFdBQTFKLEVBQXVLO0VBQ3JLZCxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQU8sQ0FBQ1csT0FBOUIsRUFBdUMsWUFBdkMsRUFBcUQ7SUFBRVYsS0FBSyxFQUFFO0VBQVQsQ0FBckQ7RUFDQUgsTUFBTSxDQUFDZSxNQUFQLENBQWNiLE9BQU8sQ0FBQ1csT0FBdEIsRUFBK0JYLE9BQS9CO0VBQ0FjLE1BQU0sQ0FBQ2QsT0FBUCxHQUFpQkEsT0FBTyxDQUFDVyxPQUF6QjtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9hZGQtbG9jYWxlLmpzP2UyZDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmFkZExvY2FsZSA9IHZvaWQgMDtcbnZhciBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuL25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaFwiKTtcbmNvbnN0IGFkZExvY2FsZSA9IChwYXRoLCAuLi5hcmdzKT0+e1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoKHJlcXVpcmUoJy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1sb2NhbGUnKS5hZGRMb2NhbGUocGF0aCwgLi4uYXJncykpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aDtcbn07XG5leHBvcnRzLmFkZExvY2FsZSA9IGFkZExvY2FsZTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJhZGRMb2NhbGUiLCJfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCIsInJlcXVpcmUiLCJwYXRoIiwiYXJncyIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfSTE4Tl9TVVBQT1JUIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/add-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/detect-domain-locale.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/client/detect-domain-locale.js ***!
  \***************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.detectDomainLocale = void 0;\n\nconst detectDomainLocale = (...args) => {\n  if (false) {}\n};\n\nexports.detectDomainLocale = detectDomainLocale;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQ3pDRyxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsMEJBQUEsR0FBNkIsS0FBSyxDQUFsQzs7QUFDQSxNQUFNRSxrQkFBa0IsR0FBRyxDQUFDLEdBQUdDLElBQUosS0FBVztFQUNsQyxJQUFJQyxLQUFKLEVBQXFDLEVBRXBDO0FBQ0osQ0FKRDs7QUFLQUosMEJBQUEsR0FBNkJFLGtCQUE3Qjs7QUFFQSxJQUFJLENBQUMsT0FBT0YsT0FBTyxDQUFDUSxPQUFmLEtBQTJCLFVBQTNCLElBQTBDLE9BQU9SLE9BQU8sQ0FBQ1EsT0FBZixLQUEyQixRQUEzQixJQUF1Q1IsT0FBTyxDQUFDUSxPQUFSLEtBQW9CLElBQXRHLEtBQWdILE9BQU9SLE9BQU8sQ0FBQ1EsT0FBUixDQUFnQkMsVUFBdkIsS0FBc0MsV0FBMUosRUFBdUs7RUFDcktYLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBTyxDQUFDUSxPQUE5QixFQUF1QyxZQUF2QyxFQUFxRDtJQUFFUCxLQUFLLEVBQUU7RUFBVCxDQUFyRDtFQUNBSCxNQUFNLENBQUNZLE1BQVAsQ0FBY1YsT0FBTyxDQUFDUSxPQUF0QixFQUErQlIsT0FBL0I7RUFDQVcsTUFBTSxDQUFDWCxPQUFQLEdBQWlCQSxPQUFPLENBQUNRLE9BQXpCO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2RldGVjdC1kb21haW4tbG9jYWxlLmpzPzAzYjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRldGVjdERvbWFpbkxvY2FsZSA9IHZvaWQgMDtcbmNvbnN0IGRldGVjdERvbWFpbkxvY2FsZSA9ICguLi5hcmdzKT0+e1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKCcuLi9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGUoLi4uYXJncyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGV0ZWN0RG9tYWluTG9jYWxlID0gZGV0ZWN0RG9tYWluTG9jYWxlO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJhcmdzIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/detect-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || '';\n\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n  if (false) {} else {\n    return false;\n  }\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQ3pDRyxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsdUJBQUEsR0FBMEJFLGVBQTFCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHQyxNQUFBLElBQXNDLEVBQXZEOztBQUNBLFNBQVNGLGVBQVQsQ0FBeUJLLElBQXpCLEVBQStCQyxNQUEvQixFQUF1Q0MsT0FBdkMsRUFBZ0RDLGFBQWhELEVBQStEO0VBQzNELElBQUlOLEtBQUosRUFBcUMsRUFBckMsTUFXTztJQUNILE9BQU8sS0FBUDtFQUNIO0FBQ0o7O0FBRUQsSUFBSSxDQUFDLE9BQU9KLE9BQU8sQ0FBQ3VCLE9BQWYsS0FBMkIsVUFBM0IsSUFBMEMsT0FBT3ZCLE9BQU8sQ0FBQ3VCLE9BQWYsS0FBMkIsUUFBM0IsSUFBdUN2QixPQUFPLENBQUN1QixPQUFSLEtBQW9CLElBQXRHLEtBQWdILE9BQU92QixPQUFPLENBQUN1QixPQUFSLENBQWdCQyxVQUF2QixLQUFzQyxXQUExSixFQUF1SztFQUNySzFCLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBTyxDQUFDdUIsT0FBOUIsRUFBdUMsWUFBdkMsRUFBcUQ7SUFBRXRCLEtBQUssRUFBRTtFQUFULENBQXJEO0VBQ0FILE1BQU0sQ0FBQzJCLE1BQVAsQ0FBY3pCLE9BQU8sQ0FBQ3VCLE9BQXRCLEVBQStCdkIsT0FBL0I7RUFDQTBCLE1BQU0sQ0FBQzFCLE9BQVAsR0FBaUJBLE9BQU8sQ0FBQ3VCLE9BQXpCO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2dldC1kb21haW4tbG9jYWxlLmpzPzVjMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldERvbWFpbkxvY2FsZSA9IGdldERvbWFpbkxvY2FsZTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCAnJztcbmZ1bmN0aW9uIGdldERvbWFpbkxvY2FsZShwYXRoLCBsb2NhbGUsIGxvY2FsZXMsIGRvbWFpbkxvY2FsZXMpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICBjb25zdCBub3JtYWxpemVMb2NhbGVQYXRoID0gcmVxdWlyZSgnLi9ub3JtYWxpemUtbG9jYWxlLXBhdGgnKS5ub3JtYWxpemVMb2NhbGVQYXRoO1xuICAgICAgICBjb25zdCBkZXRlY3REb21haW5Mb2NhbGUgPSByZXF1aXJlKCcuL2RldGVjdC1kb21haW4tbG9jYWxlJykuZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBsb2NhbGUgfHwgbm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZG9tYWluID0gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgY29uc3QgcHJvdG8gPSBgaHR0cCR7ZG9tYWluLmh0dHAgPyAnJyA6ICdzJ306Ly9gO1xuICAgICAgICAgICAgY29uc3QgZmluYWxMb2NhbGUgPSB0YXJnZXQgPT09IGRvbWFpbi5kZWZhdWx0TG9jYWxlID8gJycgOiBgLyR7dGFyZ2V0fWA7XG4gICAgICAgICAgICByZXR1cm4gYCR7cHJvdG99JHtkb21haW4uZG9tYWlufSR7YmFzZVBhdGh9JHtmaW5hbExvY2FsZX0ke3BhdGh9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWRvbWFpbi1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0RG9tYWluTG9jYWxlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJsb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicmVxdWlyZSIsImRldGVjdERvbWFpbkxvY2FsZSIsInRhcmdldCIsImRldGVjdGVkTG9jYWxlIiwiZG9tYWluIiwidW5kZWZpbmVkIiwicHJvdG8iLCJodHRwIiwiZmluYWxMb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/has-base-path.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/has-base-path.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.hasBasePath = hasBasePath;\n\nvar _pathHasPrefix = __webpack_require__(/*! ../shared/lib/router/utils/path-has-prefix */ \"../shared/lib/router/utils/path-has-prefix\");\n\nconst basePath =  false || '';\n\nfunction hasBasePath(path) {\n  return (0, _pathHasPrefix).pathHasPrefix(path, basePath);\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxtQkFBQSxHQUFzQkUsV0FBdEI7O0FBQ0EsSUFBSUMsY0FBYyxHQUFHQyxtQkFBTyxDQUFDLDhGQUFELENBQTVCOztBQUNBLE1BQU1DLFFBQVEsR0FBR0MsTUFBQSxJQUFzQyxFQUF2RDs7QUFDQSxTQUFTSixXQUFULENBQXFCTyxJQUFyQixFQUEyQjtFQUN2QixPQUFPLENBQUMsR0FBR04sY0FBSixFQUFvQk8sYUFBcEIsQ0FBa0NELElBQWxDLEVBQXdDSixRQUF4QyxDQUFQO0FBQ0g7O0FBRUQsSUFBSSxDQUFDLE9BQU9MLE9BQU8sQ0FBQ1csT0FBZixLQUEyQixVQUEzQixJQUEwQyxPQUFPWCxPQUFPLENBQUNXLE9BQWYsS0FBMkIsUUFBM0IsSUFBdUNYLE9BQU8sQ0FBQ1csT0FBUixLQUFvQixJQUF0RyxLQUFnSCxPQUFPWCxPQUFPLENBQUNXLE9BQVIsQ0FBZ0JDLFVBQXZCLEtBQXNDLFdBQTFKLEVBQXVLO0VBQ3JLZCxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQU8sQ0FBQ1csT0FBOUIsRUFBdUMsWUFBdkMsRUFBcUQ7SUFBRVYsS0FBSyxFQUFFO0VBQVQsQ0FBckQ7RUFDQUgsTUFBTSxDQUFDZSxNQUFQLENBQWNiLE9BQU8sQ0FBQ1csT0FBdEIsRUFBK0JYLE9BQS9CO0VBQ0FjLE1BQU0sQ0FBQ2QsT0FBUCxHQUFpQkEsT0FBTyxDQUFDVyxPQUF6QjtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9oYXMtYmFzZS1wYXRoLmpzPzVhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmhhc0Jhc2VQYXRoID0gaGFzQmFzZVBhdGg7XG52YXIgX3BhdGhIYXNQcmVmaXggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4XCIpO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gaGFzQmFzZVBhdGgocGF0aCkge1xuICAgIHJldHVybiAoMCwgX3BhdGhIYXNQcmVmaXgpLnBhdGhIYXNQcmVmaXgocGF0aCwgYmFzZVBhdGgpO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXMtYmFzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhhc0Jhc2VQYXRoIiwiX3BhdGhIYXNQcmVmaXgiLCJyZXF1aXJlIiwiYmFzZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsInBhdGgiLCJwYXRoSGFzUHJlZml4IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/has-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/head-manager.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/head-manager.js ***!
  \*******************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = initHeadManager;\nexports.isEqualNode = isEqualNode;\nexports.DOMAttributeNames = void 0;\n\nfunction initHeadManager() {\n  return {\n    mountedInstances: new Set(),\n    updateHead: head => {\n      const tags = {};\n      head.forEach(h => {\n        if ( // If the font tag is loaded only on client navigation\n        // it won't be inlined. In this case revert to the original behavior\n        h.type === 'link' && h.props['data-optimized-fonts']) {\n          if (document.querySelector(`style[data-href=\"${h.props['data-href']}\"]`)) {\n            return;\n          } else {\n            h.props.href = h.props['data-href'];\n            h.props['data-href'] = undefined;\n          }\n        }\n\n        const components = tags[h.type] || [];\n        components.push(h);\n        tags[h.type] = components;\n      });\n      const titleComponent = tags.title ? tags.title[0] : null;\n      let title = '';\n\n      if (titleComponent) {\n        const {\n          children\n        } = titleComponent.props;\n        title = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n      }\n\n      if (title !== document.title) document.title = title;\n      ['meta', 'base', 'link', 'style', 'script'].forEach(type => {\n        updateElements(type, tags[type] || []);\n      });\n    }\n  };\n}\n\nconst DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule'\n};\nexports.DOMAttributeNames = DOMAttributeNames;\n\nfunction reactElementToDOM({\n  type,\n  props\n}) {\n  const el = document.createElement(type);\n\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue;\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue; // we don't render undefined props to the DOM\n\n    if (props[p] === undefined) continue;\n    const attr = DOMAttributeNames[p] || p.toLowerCase();\n\n    if (type === 'script' && (attr === 'async' || attr === 'defer' || attr === 'noModule')) {\n      el[attr] = !!props[p];\n    } else {\n      el.setAttribute(attr, props[p]);\n    }\n  }\n\n  const {\n    children,\n    dangerouslySetInnerHTML\n  } = props;\n\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n  }\n\n  return el;\n}\n\nfunction isEqualNode(oldTag, newTag) {\n  if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n    const nonce = newTag.getAttribute('nonce'); // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n    // be stripped if there is no content security policy response header that includes a nonce.\n\n    if (nonce && !oldTag.getAttribute('nonce')) {\n      const cloneTag = newTag.cloneNode(true);\n      cloneTag.setAttribute('nonce', '');\n      cloneTag.nonce = nonce;\n      return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);\n    }\n  }\n\n  return oldTag.isEqualNode(newTag);\n}\n\nfunction updateElements(type, components) {\n  const headEl = document.getElementsByTagName('head')[0];\n  const headCountEl = headEl.querySelector('meta[name=next-head-count]');\n\n  if (true) {\n    if (!headCountEl) {\n      console.error('Warning: next-head-count is missing. https://nextjs.org/docs/messages/next-head-count-missing');\n      return;\n    }\n  }\n\n  const headCount = Number(headCountEl.content);\n  const oldTags = [];\n\n  for (let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null) {\n    var ref;\n\n    if ((j == null ? void 0 : (ref = j.tagName) == null ? void 0 : ref.toLowerCase()) === type) {\n      oldTags.push(j);\n    }\n  }\n\n  const newTags = components.map(reactElementToDOM).filter(newTag => {\n    for (let k = 0, len = oldTags.length; k < len; k++) {\n      const oldTag = oldTags[k];\n\n      if (isEqualNode(oldTag, newTag)) {\n        oldTags.splice(k, 1);\n        return false;\n      }\n    }\n\n    return true;\n  });\n  oldTags.forEach(t => {\n    var ref;\n    return (ref = t.parentNode) == null ? void 0 : ref.removeChild(t);\n  });\n  newTags.forEach(t => headEl.insertBefore(t, headCountEl));\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/head-manager.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\n\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\n\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\n\nvar _formatUrl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"../shared/lib/router/utils/format-url\");\n\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\n\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\n\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"../shared/lib/app-router-context\");\n\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\n\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\n\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\n\nconst prefetched = new Set();\n\nfunction prefetch(router, href, as, options) {\n  if (true) {\n    return;\n  }\n\n  if (!(0, _router).isLocalURL(href)) {\n    return;\n  } // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n\n\n  if (!options.bypassPrefetchedCheck) {\n    const locale = // Let the link's locale prop override the default router locale.\n    typeof options.locale !== 'undefined' ? options.locale : 'locale' in router ? router.locale : undefined;\n    const prefetchedKey = href + '%' + as + '%' + locale; // If we've already fetched the key, then don't prefetch it again!\n\n    if (prefetched.has(prefetchedKey)) {\n      return;\n    } // Mark this URL as prefetched.\n\n\n    prefetched.add(prefetchedKey);\n  } // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n\n\n  Promise.resolve(router.prefetch(href, as, options)).catch(err => {\n    if (true) {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n}\n\nfunction isModifiedEvent(event) {\n  const {\n    target\n  } = event.currentTarget;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\n\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n  const {\n    nodeName\n  } = e.currentTarget; // anchors inside an svg have a lowercase nodeName\n\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n\n  if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return;\n  }\n\n  e.preventDefault();\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll\n      });\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        forceOptimisticNavigation: !prefetchEnabled\n      });\n    }\n  };\n\n  if (isAppRouter) {\n    // @ts-expect-error startTransition exists.\n    _react.default.startTransition(navigate);\n  } else {\n    navigate();\n  }\n}\n\nfunction formatStringOrUrl(urlObjOrString) {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString;\n  }\n\n  return (0, _formatUrl).formatUrl(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */\n\n\nconst Link = /*#__PURE__*/_react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n  if (true) {\n    function createPropError(args) {\n      return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : ''));\n    } // TypeScript trick for type-guarding:\n\n\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // TypeScript trick for type-guarding:\n\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart') {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const hasWarned = _react.default.useRef(false);\n\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n    }\n  }\n\n  let children;\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    locale,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    // @ts-expect-error this is inlined as a literal boolean not a string\n    legacyBehavior = true === false\n  } = props,\n        restProps = _object_without_properties_loose(props, [\"href\", \"as\", \"children\", \"prefetch\", \"passHref\", \"replace\", \"shallow\", \"scroll\", \"locale\", \"onClick\", \"onMouseEnter\", \"onTouchStart\", \"legacyBehavior\"]);\n\n  children = childrenProp;\n\n  if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n    children = /*#__PURE__*/_react.default.createElement(\"a\", null, children);\n  }\n\n  const prefetchEnabled = prefetchProp !== false;\n\n  const pagesRouter = _react.default.useContext(_routerContext.RouterContext);\n\n  const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n\n  const router = pagesRouter != null ? pagesRouter : appRouter; // We're in the app directory if there is no pages router.\n\n  const isAppRouter = !pagesRouter;\n\n  if (true) {\n    if (isAppRouter && !asProp) {\n      let href;\n\n      if (typeof hrefProp === 'string') {\n        href = hrefProp;\n      } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {\n        href = hrefProp.pathname;\n      }\n\n      if (href) {\n        const hasDynamicSegment = href.split('/').some(segment => segment.startsWith('[') && segment.endsWith(']'));\n\n        if (hasDynamicSegment) {\n          throw new Error(`Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`);\n        }\n      }\n    }\n  }\n\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    if (!pagesRouter) {\n      const resolvedHref = formatStringOrUrl(hrefProp);\n      return {\n        href: resolvedHref,\n        as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n      };\n    }\n\n    const [resolvedHref, resolvedAs] = (0, _router).resolveHref(pagesRouter, hrefProp, true);\n    return {\n      href: resolvedHref,\n      as: asProp ? (0, _router).resolveHref(pagesRouter, asProp) : resolvedAs || resolvedHref\n    };\n  }, [pagesRouter, hrefProp, asProp]);\n\n  const previousHref = _react.default.useRef(href);\n\n  const previousAs = _react.default.useRef(as); // This will return the first child, if multiple are provided it will throw an error\n\n\n  let child;\n\n  if (legacyBehavior) {\n    if (true) {\n      if (onClick) {\n        console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n      }\n\n      if (onMouseEnterProp) {\n        console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n      }\n\n      try {\n        child = _react.default.Children.only(children);\n      } catch (err) {\n        if (!children) {\n          throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n        }\n\n        throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : ''));\n      }\n    } else {}\n  } else {\n    if (true) {\n      var ref;\n\n      if (((ref = children) == null ? void 0 : ref.type) === 'a') {\n        throw new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor');\n      }\n    }\n  }\n\n  const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n  const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n    rootMargin: '200px'\n  });\n\n  const setRef = _react.default.useCallback(el => {\n    // Before the link getting observed, check if visible state need to be reset\n    if (previousAs.current !== as || previousHref.current !== href) {\n      resetVisible();\n      previousAs.current = as;\n      previousHref.current = href;\n    }\n\n    setIntersectionRef(el);\n\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [as, childRef, href, resetVisible, setIntersectionRef]); // Prefetch the URL if we haven't already and it's visible.\n\n\n  _react.default.useEffect(() => {\n    // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n    if (true) {\n      return;\n    }\n\n    if (!router) {\n      return;\n    } // If we don't need to prefetch the URL, don't do prefetch.\n\n\n    if (!isVisible || !prefetchEnabled) {\n      return;\n    } // Prefetch the URL.\n\n\n    prefetch(router, href, as, {\n      locale\n    });\n  }, [as, href, isVisible, locale, prefetchEnabled, pagesRouter == null ? void 0 : pagesRouter.locale, router]);\n\n  const childProps = {\n    ref: setRef,\n\n    onClick(e) {\n      if (true) {\n        if (!e) {\n          throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e);\n      }\n\n      if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n\n      if (!router) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n    },\n\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e);\n      }\n\n      if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e);\n      }\n\n      if (!router) {\n        return;\n      }\n\n      if (!prefetchEnabled && isAppRouter) {\n        return;\n      }\n\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      });\n    },\n\n    onTouchStart(e) {\n      if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n        onTouchStartProp(e);\n      }\n\n      if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n        child.props.onTouchStart(e);\n      }\n\n      if (!router) {\n        return;\n      }\n\n      if (!prefetchEnabled && isAppRouter) {\n        return;\n      }\n\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      });\n    }\n\n  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n\n  if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : pagesRouter == null ? void 0 : pagesRouter.locale; // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n\n    const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getDomainLocale).getDomainLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n    childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n  }\n\n  return legacyBehavior ? /*#__PURE__*/_react.default.cloneElement(child, childProps) : /*#__PURE__*/_react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\n\nvar _default = Link;\nexports[\"default\"] = _default;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.normalizePathTrailingSlash = void 0;\n\nvar _removeTrailingSlash = __webpack_require__(/*! ../shared/lib/router/utils/remove-trailing-slash */ \"./utils/remove-trailing-slash\");\n\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"./utils/parse-path\");\n\nconst normalizePathTrailingSlash = path => {\n  if (!path.startsWith('/') || undefined) {\n    return path;\n  }\n\n  const {\n    pathname,\n    query,\n    hash\n  } = (0, _parsePath).parsePath(path);\n\n  if (false) {}\n\n  return `${(0, _removeTrailingSlash).removeTrailingSlash(pathname)}${query}${hash}`;\n};\n\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUN6Q0csS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELGtDQUFBLEdBQXFDLEtBQUssQ0FBMUM7O0FBQ0EsSUFBSUcsb0JBQW9CLEdBQUdDLG1CQUFPLENBQUMsdUZBQUQsQ0FBbEM7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHRCxtQkFBTyxDQUFDLGlFQUFELENBQXhCOztBQUNBLE1BQU1GLDBCQUEwQixHQUFJSSxJQUFELElBQVE7RUFDdkMsSUFBSSxDQUFDQSxJQUFJLENBQUNDLFVBQUwsQ0FBZ0IsR0FBaEIsQ0FBRCxJQUF5QkMsU0FBN0IsRUFBdUU7SUFDbkUsT0FBT0YsSUFBUDtFQUNIOztFQUNELE1BQU07SUFBRUssUUFBRjtJQUFhQyxLQUFiO0lBQXFCQztFQUFyQixJQUErQixDQUFDLEdBQUdSLFVBQUosRUFBZ0JTLFNBQWhCLENBQTBCUixJQUExQixDQUFyQzs7RUFDQSxJQUFJRSxLQUFKLEVBQXVDLEVBUXRDOztFQUNELE9BQVEsR0FBRSxDQUFDLEdBQUdMLG9CQUFKLEVBQTBCYyxtQkFBMUIsQ0FBOENOLFFBQTlDLENBQXdELEdBQUVDLEtBQU0sR0FBRUMsSUFBSyxFQUFqRjtBQUNILENBZkQ7O0FBZ0JBYixrQ0FBQSxHQUFxQ0UsMEJBQXJDOztBQUVBLElBQUksQ0FBQyxPQUFPRixPQUFPLENBQUNtQixPQUFmLEtBQTJCLFVBQTNCLElBQTBDLE9BQU9uQixPQUFPLENBQUNtQixPQUFmLEtBQTJCLFFBQTNCLElBQXVDbkIsT0FBTyxDQUFDbUIsT0FBUixLQUFvQixJQUF0RyxLQUFnSCxPQUFPbkIsT0FBTyxDQUFDbUIsT0FBUixDQUFnQkMsVUFBdkIsS0FBc0MsV0FBMUosRUFBdUs7RUFDckt0QixNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQU8sQ0FBQ21CLE9BQTlCLEVBQXVDLFlBQXZDLEVBQXFEO0lBQUVsQixLQUFLLEVBQUU7RUFBVCxDQUFyRDtFQUNBSCxNQUFNLENBQUN1QixNQUFQLENBQWNyQixPQUFPLENBQUNtQixPQUF0QixFQUErQm5CLE9BQS9CO0VBQ0FzQixNQUFNLENBQUN0QixPQUFQLEdBQWlCQSxPQUFPLENBQUNtQixPQUF6QjtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG52YXIgX3JlbW92ZVRyYWlsaW5nU2xhc2ggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9wYXJzZVBhdGggPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aFwiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gKHBhdGgpPT57XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoJy8nKSB8fCBwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZVBhdGgpLnBhcnNlUGF0aChwYXRoKTtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1RSQUlMSU5HX1NMQVNIKSB7XG4gICAgICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHsoMCwgX3JlbW92ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSBpZiAocGF0aG5hbWUuZW5kc1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke3BhdGhuYW1lfSR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYCR7cGF0aG5hbWV9LyR7cXVlcnl9JHtoYXNofWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGAkeygwLCBfcmVtb3ZlVHJhaWxpbmdTbGFzaCkucmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSl9JHtxdWVyeX0ke2hhc2h9YDtcbn07XG5leHBvcnRzLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoID0gbm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2g7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vcm1hbGl6ZS10cmFpbGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsIl9yZW1vdmVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsIl9wYXJzZVBhdGgiLCJwYXRoIiwic3RhcnRzV2l0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfTUFOVUFMX1RSQUlMSU5HX1NMQVNIIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giLCJwYXJzZVBhdGgiLCJfX05FWFRfVFJBSUxJTkdfU0xBU0giLCJ0ZXN0IiwicmVtb3ZlVHJhaWxpbmdTbGFzaCIsImVuZHNXaXRoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-base-path.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-base-path.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.removeBasePath = removeBasePath;\n\nvar _hasBasePath = __webpack_require__(/*! ./has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\n\nconst basePath =  false || '';\n\nfunction removeBasePath(path) {\n  if (false) {}\n\n  path = path.slice(basePath.length);\n  if (!path.startsWith('/')) path = `/${path}`;\n  return path;\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtYmFzZS1wYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxzQkFBQSxHQUF5QkUsY0FBekI7O0FBQ0EsSUFBSUMsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLHlFQUFELENBQTFCOztBQUNBLE1BQU1DLFFBQVEsR0FBR0MsTUFBQSxJQUFzQyxFQUF2RDs7QUFDQSxTQUFTSixjQUFULENBQXdCTyxJQUF4QixFQUE4QjtFQUMxQixJQUFJSCxLQUFKLEVBQWdELEVBSS9DOztFQUNERyxJQUFJLEdBQUdBLElBQUksQ0FBQ0csS0FBTCxDQUFXUCxRQUFRLENBQUNRLE1BQXBCLENBQVA7RUFDQSxJQUFJLENBQUNKLElBQUksQ0FBQ0ssVUFBTCxDQUFnQixHQUFoQixDQUFMLEVBQTJCTCxJQUFJLEdBQUksSUFBR0EsSUFBSyxFQUFoQjtFQUMzQixPQUFPQSxJQUFQO0FBQ0g7O0FBRUQsSUFBSSxDQUFDLE9BQU9ULE9BQU8sQ0FBQ2UsT0FBZixLQUEyQixVQUEzQixJQUEwQyxPQUFPZixPQUFPLENBQUNlLE9BQWYsS0FBMkIsUUFBM0IsSUFBdUNmLE9BQU8sQ0FBQ2UsT0FBUixLQUFvQixJQUF0RyxLQUFnSCxPQUFPZixPQUFPLENBQUNlLE9BQVIsQ0FBZ0JDLFVBQXZCLEtBQXNDLFdBQTFKLEVBQXVLO0VBQ3JLbEIsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUFPLENBQUNlLE9BQTlCLEVBQXVDLFlBQXZDLEVBQXFEO0lBQUVkLEtBQUssRUFBRTtFQUFULENBQXJEO0VBQ0FILE1BQU0sQ0FBQ21CLE1BQVAsQ0FBY2pCLE9BQU8sQ0FBQ2UsT0FBdEIsRUFBK0JmLE9BQS9CO0VBQ0FrQixNQUFNLENBQUNsQixPQUFQLEdBQWlCQSxPQUFPLENBQUNlLE9BQXpCO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlbW92ZS1iYXNlLXBhdGguanM/YjRmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlQmFzZVBhdGggPSByZW1vdmVCYXNlUGF0aDtcbnZhciBfaGFzQmFzZVBhdGggPSByZXF1aXJlKFwiLi9oYXMtYmFzZS1wYXRoXCIpO1xuY29uc3QgYmFzZVBhdGggPSBwcm9jZXNzLmVudi5fX05FWFRfUk9VVEVSX0JBU0VQQVRIIHx8ICcnO1xuZnVuY3Rpb24gcmVtb3ZlQmFzZVBhdGgocGF0aCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfTUFOVUFMX0NMSUVOVF9CQVNFX1BBVEgpIHtcbiAgICAgICAgaWYgKCEoMCwgX2hhc0Jhc2VQYXRoKS5oYXNCYXNlUGF0aChwYXRoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGF0aCA9IHBhdGguc2xpY2UoYmFzZVBhdGgubGVuZ3RoKTtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aCgnLycpKSBwYXRoID0gYC8ke3BhdGh9YDtcbiAgICByZXR1cm4gcGF0aDtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLWJhc2UtcGF0aC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyZW1vdmVCYXNlUGF0aCIsIl9oYXNCYXNlUGF0aCIsInJlcXVpcmUiLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsIl9fTkVYVF9NQU5VQUxfQ0xJRU5UX0JBU0VfUEFUSCIsImhhc0Jhc2VQYXRoIiwic2xpY2UiLCJsZW5ndGgiLCJzdGFydHNXaXRoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-base-path.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/remove-locale.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/remove-locale.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.removeLocale = removeLocale;\n\nvar _parsePath = __webpack_require__(/*! ../shared/lib/router/utils/parse-path */ \"./utils/parse-path\");\n\nfunction removeLocale(path, locale) {\n  if (false) {}\n\n  return path;\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZW1vdmUtbG9jYWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxvQkFBQSxHQUF1QkUsWUFBdkI7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHQyxtQkFBTyxDQUFDLGlFQUFELENBQXhCOztBQUNBLFNBQVNGLFlBQVQsQ0FBc0JHLElBQXRCLEVBQTRCQyxNQUE1QixFQUFvQztFQUNoQyxJQUFJQyxLQUFKLEVBQXFDLEVBS3BDOztFQUNELE9BQU9GLElBQVA7QUFDSDs7QUFFRCxJQUFJLENBQUMsT0FBT0wsT0FBTyxDQUFDa0IsT0FBZixLQUEyQixVQUEzQixJQUEwQyxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBZixLQUEyQixRQUEzQixJQUF1Q2xCLE9BQU8sQ0FBQ2tCLE9BQVIsS0FBb0IsSUFBdEcsS0FBZ0gsT0FBT2xCLE9BQU8sQ0FBQ2tCLE9BQVIsQ0FBZ0JDLFVBQXZCLEtBQXNDLFdBQTFKLEVBQXVLO0VBQ3JLckIsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUFPLENBQUNrQixPQUE5QixFQUF1QyxZQUF2QyxFQUFxRDtJQUFFakIsS0FBSyxFQUFFO0VBQVQsQ0FBckQ7RUFDQUgsTUFBTSxDQUFDc0IsTUFBUCxDQUFjcEIsT0FBTyxDQUFDa0IsT0FBdEIsRUFBK0JsQixPQUEvQjtFQUNBcUIsTUFBTSxDQUFDckIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDa0IsT0FBekI7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVtb3ZlLWxvY2FsZS5qcz80NzUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZW1vdmVMb2NhbGUgPSByZW1vdmVMb2NhbGU7XG52YXIgX3BhcnNlUGF0aCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoXCIpO1xuZnVuY3Rpb24gcmVtb3ZlTG9jYWxlKHBhdGgsIGxvY2FsZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IHsgcGF0aG5hbWUgIH0gPSAoMCwgX3BhcnNlUGF0aCkucGFyc2VQYXRoKHBhdGgpO1xuICAgICAgICBjb25zdCBwYXRoTG93ZXIgPSBwYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBsb2NhbGVMb3dlciA9IGxvY2FsZSA9PSBudWxsID8gdm9pZCAwIDogbG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiBsb2NhbGUgJiYgKHBhdGhMb3dlci5zdGFydHNXaXRoKGAvJHtsb2NhbGVMb3dlcn0vYCkgfHwgcGF0aExvd2VyID09PSBgLyR7bG9jYWxlTG93ZXJ9YCkgPyBgJHtwYXRobmFtZS5sZW5ndGggPT09IGxvY2FsZS5sZW5ndGggKyAxID8gYC9gIDogYGB9JHtwYXRoLnNsaWNlKGxvY2FsZS5sZW5ndGggKyAxKX1gIDogcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZS1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlTG9jYWxlIiwiX3BhcnNlUGF0aCIsInJlcXVpcmUiLCJwYXRoIiwibG9jYWxlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJwYXRobmFtZSIsInBhcnNlUGF0aCIsInBhdGhMb3dlciIsInRvTG93ZXJDYXNlIiwibG9jYWxlTG93ZXIiLCJzdGFydHNXaXRoIiwibGVuZ3RoIiwic2xpY2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/remove-locale.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\n\nconst requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function (cb) {\n  let start = Date.now();\n  return self.setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function () {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.requestIdleCallback = requestIdleCallback;\n\nconst cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function (id) {\n  return clearTimeout(id);\n};\n\nexports.cancelIdleCallback = cancelIdleCallback;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUN6Q0csS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELDBCQUFBLEdBQTZCQSwyQkFBQSxHQUE4QixLQUFLLENBQWhFOztBQUNBLE1BQU1HLG1CQUFtQixHQUFHLE9BQU9DLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JBLElBQUksQ0FBQ0QsbUJBQXBDLElBQTJEQyxJQUFJLENBQUNELG1CQUFMLENBQXlCRSxJQUF6QixDQUE4QkMsTUFBOUIsQ0FBM0QsSUFBb0csVUFBU0MsRUFBVCxFQUFhO0VBQ3pJLElBQUlDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEVBQVo7RUFDQSxPQUFPTixJQUFJLENBQUNPLFVBQUwsQ0FBZ0IsWUFBVztJQUM5QkosRUFBRSxDQUFDO01BQ0NLLFVBQVUsRUFBRSxLQURiO01BRUNDLGFBQWEsRUFBRSxZQUFXO1FBQ3RCLE9BQU9DLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWSxNQUFNTixJQUFJLENBQUNDLEdBQUwsS0FBYUYsS0FBbkIsQ0FBWixDQUFQO01BQ0g7SUFKRixDQUFELENBQUY7RUFNSCxDQVBNLEVBT0osQ0FQSSxDQUFQO0FBUUgsQ0FWRDs7QUFXQVIsMkJBQUEsR0FBOEJHLG1CQUE5Qjs7QUFDQSxNQUFNRCxrQkFBa0IsR0FBRyxPQUFPRSxJQUFQLEtBQWdCLFdBQWhCLElBQStCQSxJQUFJLENBQUNGLGtCQUFwQyxJQUEwREUsSUFBSSxDQUFDRixrQkFBTCxDQUF3QkcsSUFBeEIsQ0FBNkJDLE1BQTdCLENBQTFELElBQWtHLFVBQVNVLEVBQVQsRUFBYTtFQUN0SSxPQUFPQyxZQUFZLENBQUNELEVBQUQsQ0FBbkI7QUFDSCxDQUZEOztBQUdBaEIsMEJBQUEsR0FBNkJFLGtCQUE3Qjs7QUFFQSxJQUFJLENBQUMsT0FBT0YsT0FBTyxDQUFDa0IsT0FBZixLQUEyQixVQUEzQixJQUEwQyxPQUFPbEIsT0FBTyxDQUFDa0IsT0FBZixLQUEyQixRQUEzQixJQUF1Q2xCLE9BQU8sQ0FBQ2tCLE9BQVIsS0FBb0IsSUFBdEcsS0FBZ0gsT0FBT2xCLE9BQU8sQ0FBQ2tCLE9BQVIsQ0FBZ0JDLFVBQXZCLEtBQXNDLFdBQTFKLEVBQXVLO0VBQ3JLckIsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUFPLENBQUNrQixPQUE5QixFQUF1QyxZQUF2QyxFQUFxRDtJQUFFakIsS0FBSyxFQUFFO0VBQVQsQ0FBckQ7RUFDQUgsTUFBTSxDQUFDc0IsTUFBUCxDQUFjcEIsT0FBTyxDQUFDa0IsT0FBdEIsRUFBK0JsQixPQUEvQjtFQUNBcUIsTUFBTSxDQUFDckIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDa0IsT0FBekI7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzPzFlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNhbmNlbElkbGVDYWxsYmFjayA9IGV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHZvaWQgMDtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjay5iaW5kKHdpbmRvdykgfHwgZnVuY3Rpb24oY2IpIHtcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgIHJldHVybiBzZWxmLnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNiKHtcbiAgICAgICAgICAgIGRpZFRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgdGltZVJlbWFpbmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIDUwIC0gKERhdGUubm93KCkgLSBzdGFydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LCAxKTtcbn07XG5leHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuY29uc3QgY2FuY2VsSWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcbmV4cG9ydHMuY2FuY2VsSWRsZUNhbGxiYWNrID0gY2FuY2VsSWRsZUNhbGxiYWNrO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2FuY2VsSWRsZUNhbGxiYWNrIiwicmVxdWVzdElkbGVDYWxsYmFjayIsInNlbGYiLCJiaW5kIiwid2luZG93IiwiY2IiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJzZXRUaW1lb3V0IiwiZGlkVGltZW91dCIsInRpbWVSZW1haW5pbmciLCJNYXRoIiwibWF4IiwiaWQiLCJjbGVhclRpbWVvdXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.createRouteLoader = createRouteLoader;\n\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\n\nvar _getAssetPathFromRoute = _interop_require_default(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\n\nvar _trustedTypes = __webpack_require__(/*! ./trusted-types */ \"./node_modules/next/dist/client/trusted-types.js\");\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\"); // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nconst MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  let entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  let resolver;\n  const prom = new Promise(resolve => {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? generator() // eslint-disable-next-line no-sequences\n  .then(value => (resolver(value), value)).catch(err => {\n    map.delete(key);\n    throw err;\n  }) : prom;\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise((resolve, reject) => {\n    const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n\n    if (document.querySelector(selector)) {\n      return resolve();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = `prefetch`;\n    link.crossOrigin = undefined;\n    link.onload = resolve;\n\n    link.onerror = () => reject(markAssetError(new Error(`Failed to prefetch: ${href}`))); // `href` should always be last:\n\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nfunction appendScript(src, script) {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = () => reject(markAssetError(new Error(`Failed to load script: ${src}`))); // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n} // We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\n\n\nlet devBuildPromise; // Resolve a promise that times out after given amount of milliseconds.\n\nfunction resolvePromiseWithTimeout(p, ms, err) {\n  return new Promise((resolve, reject) => {\n    let cancelled = false;\n    p.then(r => {\n      // Resolved, cancel the timeout\n      cancelled = true;\n      resolve(r);\n    }).catch(reject); // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n\n    if (true) {\n      (devBuildPromise || Promise.resolve()).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => setTimeout(() => {\n          if (!cancelled) {\n            reject(err);\n          }\n        }, ms));\n      });\n    }\n\n    if (false) {}\n  });\n}\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  const onBuildManifest = new Promise(resolve => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    const scriptUrl = assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js'));\n    return Promise.resolve({\n      scripts: [(0, _trustedTypes).__unsafeCreateTrustedScriptURL(scriptUrl)],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(manifest => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n    }\n\n    const allFiles = manifest[route].map(entry => assetPrefix + '/_next/' + encodeURI(entry));\n    return {\n      scripts: allFiles.filter(v => v.endsWith('.js')).map(v => (0, _trustedTypes).__unsafeCreateTrustedScriptURL(v)),\n      css: allFiles.filter(v => v.endsWith('.css'))\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  const entrypoints = new Map();\n  const loadedScripts = new Map();\n  const styleSheets = new Map();\n  const routes = new Map();\n\n  function maybeExecuteScript(src) {\n    // With HMR we might need to \"reload\" scripts when they are\n    // disposed and readded. Executing scripts twice has no functional\n    // differences\n    if (false) {} else {\n      return appendScript(src);\n    }\n  }\n\n  function fetchStyleSheet(href) {\n    let prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to load stylesheet: ${href}`);\n      }\n\n      return res.text().then(text => ({\n        href: href,\n        content: text\n      }));\n    }).catch(err => {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n\n    onEntrypoint(route, execute) {\n      (execute ? Promise.resolve().then(() => execute()).then(exports => ({\n        component: exports && exports.default || exports,\n        exports: exports\n      }), err => ({\n        error: err\n      })) : Promise.resolve(undefined)).then(input => {\n        const old = entrypoints.get(route);\n\n        if (old && 'resolve' in old) {\n          if (input) {\n            entrypoints.set(route, input);\n            old.resolve(input);\n          }\n        } else {\n          if (input) {\n            entrypoints.set(route, input);\n          } else {\n            entrypoints.delete(route);\n          } // when this entrypoint has been resolved before\n          // the route is outdated and we want to invalidate\n          // this cache entry\n\n\n          routes.delete(route);\n        }\n      });\n    },\n\n    loadRoute(route, prefetch) {\n      return withFuture(route, routes, () => {\n        let devBuildPromiseResolve;\n\n        if (true) {\n          devBuildPromise = new Promise(resolve => {\n            devBuildPromiseResolve = resolve;\n          });\n        }\n\n        return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({\n          scripts,\n          css\n        }) => {\n          return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n        }).then(res => {\n          return this.whenEntrypoint(route).then(entrypoint => ({\n            entrypoint,\n            styles: res[1]\n          }));\n        }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({\n          entrypoint,\n          styles\n        }) => {\n          const res = Object.assign({\n            styles: styles\n          }, entrypoint);\n          return 'error' in entrypoint ? entrypoint : res;\n        }).catch(err => {\n          if (prefetch) {\n            // we don't want to cache errors during prefetch\n            throw err;\n          }\n\n          return {\n            error: err\n          };\n        }).finally(() => {\n          return devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve();\n        });\n      });\n    },\n\n    prefetch(route) {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(output => Promise.all(canPrefetch ? output.scripts.map(script => prefetchViaDom(script.toString(), 'script')) : [])).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}));\n      }).catch( // swallow prefetch errors\n      () => {});\n    }\n\n  };\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/script.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/script.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleClientScriptLoad = handleClientScriptLoad;\nexports.initScriptLoader = initScriptLoader;\nexports[\"default\"] = void 0;\n\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\n\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\n\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\n\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\n\nvar _reactDom = _interop_require_default(__webpack_require__(/*! react-dom */ \"react-dom\"));\n\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _headManagerContext = __webpack_require__(/*! ../shared/lib/head-manager-context */ \"./head-manager-context\");\n\nvar _headManager = __webpack_require__(/*! ./head-manager */ \"./node_modules/next/dist/client/head-manager.js\");\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = ['onLoad', 'onReady', 'dangerouslySetInnerHTML', 'children', 'onError', 'strategy'];\n\nconst loadScript = props => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError\n  } = props;\n  const cacheKey = id || src; // Script has already loaded\n\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return;\n  } // Contents of this script are already loading/loaded\n\n\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey); // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n\n    ScriptCache.get(src).then(onLoad, onError);\n    return;\n  }\n  /** Execute after the script first loaded */\n\n\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady();\n    } // add cacheKey to LoadCache when load successfully\n\n\n    LoadCache.add(cacheKey);\n  };\n\n  const el = document.createElement('script');\n  const loadPromise = new Promise((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve();\n\n      if (onLoad) {\n        onLoad.call(this, e);\n      }\n\n      afterLoad();\n    });\n    el.addEventListener('error', function (e) {\n      reject(e);\n    });\n  }).catch(function (e) {\n    if (onError) {\n      onError(e);\n    }\n  });\n\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n    afterLoad();\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : Array.isArray(children) ? children.join('') : '';\n    afterLoad();\n  } else if (src) {\n    el.src = src; // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise);\n  }\n\n  for (const [k, value] of Object.entries(props)) {\n    if (value === undefined || ignoreProps.includes(k)) {\n      continue;\n    }\n\n    const attr = _headManager.DOMAttributeNames[k] || k.toLowerCase();\n    el.setAttribute(attr, value);\n  }\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown');\n  }\n\n  el.setAttribute('data-nscript', strategy);\n  document.body.appendChild(el);\n};\n\nfunction handleClientScriptLoad(props) {\n  const {\n    strategy = 'afterInteractive'\n  } = props;\n\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n    });\n  } else {\n    loadScript(props);\n  }\n}\n\nfunction loadLazyScript(props) {\n  if (document.readyState === 'complete') {\n    (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n  } else {\n    window.addEventListener('load', () => {\n      (0, _requestIdleCallback).requestIdleCallback(() => loadScript(props));\n    });\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'), ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')];\n  scripts.forEach(script => {\n    const cacheKey = script.id || script.getAttribute('src');\n    LoadCache.add(cacheKey);\n  });\n}\n\nfunction initScriptLoader(scriptLoaderItems) {\n  scriptLoaderItems.forEach(handleClientScriptLoad);\n  addBeforeInteractiveToCache();\n}\n\nfunction Script(props) {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError\n  } = props,\n        restProps = _object_without_properties_loose(props, [\"id\", \"src\", \"onLoad\", \"onReady\", \"strategy\", \"onError\"]); // Context is available only during SSR\n\n\n  const {\n    updateScripts,\n    scripts,\n    getIsSsr,\n    appDir,\n    nonce\n  } = (0, _react).useContext(_headManagerContext.HeadManagerContext);\n  /**\n  * - First mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n  *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n  *      Once the script is loaded, the onLoad and onReady will be called by then\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  *\n  * - Second mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n  *      onReady is called, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. The script is already loaded, loadScript bails out\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  */\n\n  const hasOnReadyEffectCalled = (0, _react).useRef(false);\n  (0, _react).useEffect(() => {\n    const cacheKey = id || src;\n\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady();\n      }\n\n      hasOnReadyEffectCalled.current = true;\n    }\n  }, [onReady, id, src]);\n  const hasLoadScriptEffectCalled = (0, _react).useRef(false);\n  (0, _react).useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props);\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props);\n      }\n\n      hasLoadScriptEffectCalled.current = true;\n    }\n  }, [props, strategy]);\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([_extends({\n        id,\n        src,\n        onLoad,\n        onReady,\n        onError\n      }, restProps)]);\n      updateScripts(scripts);\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src);\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props);\n    }\n  } // For the app directory, we need React Float to preload these scripts.\n\n\n  if (appDir) {\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          restProps.children = restProps.dangerouslySetInnerHTML.__html;\n          delete restProps.dangerouslySetInnerHTML;\n        }\n\n        return /*#__PURE__*/_react.default.createElement(\"script\", {\n          nonce: nonce,\n          dangerouslySetInnerHTML: {\n            __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([0, _extends({}, restProps)])})`\n          }\n        });\n      } // @ts-ignore\n\n\n      _reactDom.default.preload(src, restProps.integrity ? {\n        as: 'script',\n        integrity: restProps.integrity\n      } : {\n        as: 'script'\n      });\n\n      return /*#__PURE__*/_react.default.createElement(\"script\", {\n        nonce: nonce,\n        dangerouslySetInnerHTML: {\n          __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([src])})`\n        }\n      });\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        _reactDom.default.preload(src, restProps.integrity ? {\n          as: 'script',\n          integrity: restProps.integrity\n        } : {\n          as: 'script'\n        });\n      }\n    }\n  }\n\n  return null;\n}\n\nObject.defineProperty(Script, '__nextScript', {\n  value: true\n});\nvar _default = Script;\nexports[\"default\"] = _default;\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/script.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/trusted-types.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/client/trusted-types.js ***!
  \********************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.__unsafeCreateTrustedScriptURL = __unsafeCreateTrustedScriptURL;\n/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */\n\nlet policy;\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */\n\nfunction getPolicy() {\n  if (typeof policy === 'undefined' && false) { var ref; }\n\n  return policy;\n}\n\nfunction __unsafeCreateTrustedScriptURL(url) {\n  var ref;\n  return ((ref = getPolicy()) == null ? void 0 : ref.createScriptURL(url)) || url;\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQURrQyxDQUE3QztBQUdBRCxzQ0FBQSxHQUF5Q0UsOEJBQXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQUksSUFBSUMsTUFBSjtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUFJLFNBQVNDLFNBQVQsR0FBcUI7RUFDckIsSUFBSSxPQUFPRCxNQUFQLEtBQWtCLFdBQWxCLFNBQUosRUFBb0UsWUFPbkU7O0VBQ0QsT0FBT0EsTUFBUDtBQUNIOztBQUNELFNBQVNELDhCQUFULENBQXdDVyxHQUF4QyxFQUE2QztFQUN6QyxJQUFJUixHQUFKO0VBQ0EsT0FBTyxDQUFDLENBQUNBLEdBQUcsR0FBR0QsU0FBUyxFQUFoQixLQUF1QixJQUF2QixHQUE4QixLQUFLLENBQW5DLEdBQXVDQyxHQUFHLENBQUNPLGVBQUosQ0FBb0JDLEdBQXBCLENBQXhDLEtBQXFFQSxHQUE1RTtBQUNIOztBQUVELElBQUksQ0FBQyxPQUFPYixPQUFPLENBQUNjLE9BQWYsS0FBMkIsVUFBM0IsSUFBMEMsT0FBT2QsT0FBTyxDQUFDYyxPQUFmLEtBQTJCLFFBQTNCLElBQXVDZCxPQUFPLENBQUNjLE9BQVIsS0FBb0IsSUFBdEcsS0FBZ0gsT0FBT2QsT0FBTyxDQUFDYyxPQUFSLENBQWdCQyxVQUF2QixLQUFzQyxXQUExSixFQUF1SztFQUNyS2pCLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBTyxDQUFDYyxPQUE5QixFQUF1QyxZQUF2QyxFQUFxRDtJQUFFYixLQUFLLEVBQUU7RUFBVCxDQUFyRDtFQUNBSCxNQUFNLENBQUNrQixNQUFQLENBQWNoQixPQUFPLENBQUNjLE9BQXRCLEVBQStCZCxPQUEvQjtFQUNBaUIsTUFBTSxDQUFDakIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDYyxPQUF6QjtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC90cnVzdGVkLXR5cGVzLmpzP2E0MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCA9IF9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTDtcbi8qKlxuICogU3RvcmVzIHRoZSBUcnVzdGVkIFR5cGVzIFBvbGljeS4gU3RhcnRzIGFzIHVuZGVmaW5lZCBhbmQgY2FuIGJlIHNldCB0byBudWxsXG4gKiBpZiBUcnVzdGVkIFR5cGVzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIuXG4gKi8gbGV0IHBvbGljeTtcbi8qKlxuICogR2V0dGVyIGZvciB0aGUgVHJ1c3RlZCBUeXBlcyBQb2xpY3kuIElmIGl0IGlzIHVuZGVmaW5lZCwgaXQgaXMgaW5zdGFudGlhdGVkXG4gKiBoZXJlIG9yIHNldCB0byBudWxsIGlmIFRydXN0ZWQgVHlwZXMgaXMgbm90IHN1cHBvcnRlZCBpbiB0aGUgYnJvd3Nlci5cbiAqLyBmdW5jdGlvbiBnZXRQb2xpY3koKSB7XG4gICAgaWYgKHR5cGVvZiBwb2xpY3kgPT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciByZWY7XG4gICAgICAgIHBvbGljeSA9ICgocmVmID0gd2luZG93LnRydXN0ZWRUeXBlcykgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVQb2xpY3koJ25leHRqcycsIHtcbiAgICAgICAgICAgIGNyZWF0ZUhUTUw6IChpbnB1dCk9PmlucHV0LFxuICAgICAgICAgICAgY3JlYXRlU2NyaXB0OiAoaW5wdXQpPT5pbnB1dCxcbiAgICAgICAgICAgIGNyZWF0ZVNjcmlwdFVSTDogKGlucHV0KT0+aW5wdXRcbiAgICAgICAgfSkpIHx8IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBwb2xpY3k7XG59XG5mdW5jdGlvbiBfX3Vuc2FmZUNyZWF0ZVRydXN0ZWRTY3JpcHRVUkwodXJsKSB7XG4gICAgdmFyIHJlZjtcbiAgICByZXR1cm4gKChyZWYgPSBnZXRQb2xpY3koKSkgPT0gbnVsbCA/IHZvaWQgMCA6IHJlZi5jcmVhdGVTY3JpcHRVUkwodXJsKSkgfHwgdXJsO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnVzdGVkLXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9fdW5zYWZlQ3JlYXRlVHJ1c3RlZFNjcmlwdFVSTCIsInBvbGljeSIsImdldFBvbGljeSIsInJlZiIsIndpbmRvdyIsInRydXN0ZWRUeXBlcyIsImNyZWF0ZVBvbGljeSIsImNyZWF0ZUhUTUwiLCJpbnB1dCIsImNyZWF0ZVNjcmlwdCIsImNyZWF0ZVNjcmlwdFVSTCIsInVybCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/trusted-types.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useIntersection = useIntersection;\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function';\nconst observers = new Map();\nconst idList = [];\n\nfunction createObserver(options) {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || ''\n  };\n  const existing = idList.find(obj => obj.root === id.root && obj.margin === id.margin);\n  let instance;\n\n  if (existing) {\n    instance = observers.get(existing);\n\n    if (instance) {\n      return instance;\n    }\n  }\n\n  const elements = new Map();\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      const callback = elements.get(entry.target);\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n\n      if (callback && isVisible) {\n        callback(isVisible);\n      }\n    });\n  }, options);\n  instance = {\n    id,\n    observer,\n    elements\n  };\n  idList.push(id);\n  observers.set(id, instance);\n  return instance;\n}\n\nfunction observe(element, callback, options) {\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  elements.set(element, callback);\n  observer.observe(element);\n  return function unobserve() {\n    elements.delete(element);\n    observer.unobserve(element); // Destroy observer when there's nothing left to watch:\n\n    if (elements.size === 0) {\n      observer.disconnect();\n      observers.delete(id);\n      const index = idList.findIndex(obj => obj.root === id.root && obj.margin === id.margin);\n\n      if (index > -1) {\n        idList.splice(index, 1);\n      }\n    }\n  };\n}\n\nfunction useIntersection({\n  rootRef,\n  rootMargin,\n  disabled\n}) {\n  const isDisabled = disabled || !hasIntersectionObserver;\n  const [visible, setVisible] = (0, _react).useState(false);\n  const [element, setElement] = (0, _react).useState(null);\n  (0, _react).useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return;\n\n      if (element && element.tagName) {\n        const unobserve = observe(element, isVisible => isVisible && setVisible(isVisible), {\n          root: rootRef == null ? void 0 : rootRef.current,\n          rootMargin\n        });\n        return unobserve;\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = (0, _requestIdleCallback).requestIdleCallback(() => setVisible(true));\n        return () => (0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n      }\n    }\n  }, [element, isDisabled, rootMargin, rootRef, visible]);\n  const resetVisible = (0, _react).useCallback(() => {\n    setVisible(false);\n  }, []);\n  return [setElement, visible, resetVisible];\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.matchesMiddleware = matchesMiddleware;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports.createKey = createKey;\nexports[\"default\"] = void 0;\n\nvar _async_to_generator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"./node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\n\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\n\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\n\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nvar _removeTrailingSlash = __webpack_require__(/*! ./utils/remove-trailing-slash */ \"./utils/remove-trailing-slash\");\n\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\n\nvar _script = __webpack_require__(/*! ../../../client/script */ \"./node_modules/next/dist/client/script.js\");\n\nvar _isError = _interop_require_wildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\n\nvar _denormalizePagePath = __webpack_require__(/*! ../page-path/denormalize-page-path */ \"../page-path/denormalize-page-path\");\n\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\n\nvar _mitt = _interop_require_default(__webpack_require__(/*! ../mitt */ \"../mitt\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../utils\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\n\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\n\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\n\nvar _resolveRewrites = _interop_require_default(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\n\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"../shared/lib/router/utils/format-url\");\n\nvar _detectDomainLocale = __webpack_require__(/*! ../../../client/detect-domain-locale */ \"./node_modules/next/dist/client/detect-domain-locale.js\");\n\nvar _parsePath = __webpack_require__(/*! ./utils/parse-path */ \"./utils/parse-path\");\n\nvar _addLocale = __webpack_require__(/*! ../../../client/add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\n\nvar _removeLocale = __webpack_require__(/*! ../../../client/remove-locale */ \"./node_modules/next/dist/client/remove-locale.js\");\n\nvar _removeBasePath = __webpack_require__(/*! ../../../client/remove-base-path */ \"./node_modules/next/dist/client/remove-base-path.js\");\n\nvar _addBasePath = __webpack_require__(/*! ../../../client/add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\n\nvar _hasBasePath = __webpack_require__(/*! ../../../client/has-base-path */ \"./node_modules/next/dist/client/has-base-path.js\");\n\nvar _isApiRoute = __webpack_require__(/*! ../../../lib/is-api-route */ \"./node_modules/next/dist/lib/is-api-route.js\");\n\nvar _getNextPathnameInfo = __webpack_require__(/*! ./utils/get-next-pathname-info */ \"./utils/get-next-pathname-info\");\n\nvar _formatNextPathnameInfo = __webpack_require__(/*! ./utils/format-next-pathname-info */ \"./utils/format-next-pathname-info\");\n\nvar _compareStates = __webpack_require__(/*! ./utils/compare-states */ \"./utils/compare-states\");\n\nvar _isBot = __webpack_require__(/*! ./utils/is-bot */ \"./utils/is-bot\");\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\n\nfunction matchesMiddleware(options) {\n  return _matchesMiddleware.apply(this, arguments);\n}\n\nfunction _matchesMiddleware() {\n  _matchesMiddleware = _async_to_generator(function* (options) {\n    const matchers = yield Promise.resolve(options.router.pageLoader.getMiddleware());\n    if (!matchers) return false;\n    const {\n      pathname: asPathname\n    } = (0, _parsePath).parsePath(options.asPath); // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`\n\n    const cleanedAs = (0, _hasBasePath).hasBasePath(asPathname) ? (0, _removeBasePath).removeBasePath(asPathname) : asPathname;\n    const asWithBasePathAndLocale = (0, _addBasePath).addBasePath((0, _addLocale).addLocale(cleanedAs, options.locale)); // Check only path match on client. Matching \"has\" should be done on server\n    // where we can access more info such as headers, HttpOnly cookie, etc.\n\n    return matchers.some(m => new RegExp(m.regexp).test(asWithBasePathAndLocale));\n  });\n  return _matchesMiddleware.apply(this, arguments);\n}\n\nfunction stripOrigin(url) {\n  const origin = (0, _utils).getLocationOrigin();\n  return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\n\nfunction omit(object, keys) {\n  const omitted = {};\n  Object.keys(object).forEach(key => {\n    if (!keys.includes(key)) {\n      omitted[key] = object[key];\n    }\n  });\n  return omitted;\n}\n\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!(0, _utils).isAbsoluteUrl(url)) return true;\n\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = (0, _utils).getLocationOrigin();\n    const resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && (0, _hasBasePath).hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction interpolateAs(route, asPathname, query) {\n  let interpolatedRoute = '';\n  const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n  const dynamicGroups = dynamicRegex.groups;\n  const dynamicMatches = // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  const params = Object.keys(dynamicGroups);\n\n  if (!params.every(param => {\n    let value = dynamicMatches[param] || '';\n    const {\n      repeat,\n      optional\n    } = dynamicGroups[param]; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n\n    let replaced = `[${repeat ? '...' : ''}${param}]`;\n\n    if (optional) {\n      replaced = `${!value ? '/' : ''}[${replaced}]`;\n    }\n\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && ( // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    segment => encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = '' // did not satisfy all requirements\n    ; // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params,\n    result: interpolatedRoute\n  };\n}\n\nfunction resolveHref(router, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  let base;\n  let urlAsString = typeof href === 'string' ? href : (0, _formatUrl).formatWithValidation(href); // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n\n  const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n  const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n  const urlParts = urlAsStringNoProto.split('?');\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n    const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;\n  } // Return because it cannot be routed by the Next.js router\n\n\n  if (!isLocalURL(urlAsString)) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n\n  try {\n    base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n');\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n    let interpolatedAs = '';\n\n    if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n      const {\n        result,\n        params\n      } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n\n      if (result) {\n        interpolatedAs = (0, _formatUrl).formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omit(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n\n\n    const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_1) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\n\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n  const origin = (0, _utils).getLocationOrigin();\n  const hrefWasAbsolute = resolvedHref.startsWith(origin);\n  const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin);\n  resolvedHref = stripOrigin(resolvedHref);\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n  const preparedUrl = hrefWasAbsolute ? resolvedHref : (0, _addBasePath).addBasePath(resolvedHref);\n  const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n  return {\n    url: preparedUrl,\n    as: asWasAbsolute ? preparedAs : (0, _addBasePath).addBasePath(preparedAs)\n  };\n}\n\nfunction resolveDynamicRoute(pathname, pages) {\n  const cleanPathname = (0, _removeTrailingSlash).removeTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname;\n  } // handle resolving href for dynamic routes\n\n\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some(page => {\n      if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n        pathname = page;\n        return true;\n      }\n    });\n  }\n\n  return (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n}\n\nfunction getMiddlewareData(source, response, options) {\n  const nextConfig = {\n    basePath: options.router.basePath,\n    i18n: {\n      locales: options.router.locales\n    },\n    trailingSlash: Boolean(false)\n  };\n  const rewriteHeader = response.headers.get('x-nextjs-rewrite');\n  let rewriteTarget = rewriteHeader || response.headers.get('x-nextjs-matched-path');\n  const matchedPath = response.headers.get('x-matched-path');\n\n  if (matchedPath && !rewriteTarget && !matchedPath.includes('__next_data_catchall') && !matchedPath.includes('/_error') && !matchedPath.includes('/404')) {\n    // leverage x-matched-path to detect next.config.js rewrites\n    rewriteTarget = matchedPath;\n  }\n\n  if (rewriteTarget) {\n    if (rewriteTarget.startsWith('/')) {\n      const parsedRewriteTarget = (0, _parseRelativeUrl).parseRelativeUrl(rewriteTarget);\n      const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(parsedRewriteTarget.pathname, {\n        nextConfig,\n        parseData: true\n      });\n      let fsPathname = (0, _removeTrailingSlash).removeTrailingSlash(pathnameInfo.pathname);\n      return Promise.all([options.router.pageLoader.getPageList(), (0, _routeLoader).getClientBuildManifest()]).then(([pages, {\n        __rewrites: rewrites\n      }]) => {\n        let as = (0, _addLocale).addLocale(pathnameInfo.pathname, pathnameInfo.locale);\n\n        if ((0, _isDynamic).isDynamicRoute(as) || !rewriteHeader && pages.includes((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(as), options.router.locales).pathname)) {\n          const parsedSource = (0, _getNextPathnameInfo).getNextPathnameInfo((0, _parseRelativeUrl).parseRelativeUrl(source).pathname, {\n            parseData: true\n          });\n          as = (0, _addBasePath).addBasePath(parsedSource.pathname);\n          parsedRewriteTarget.pathname = as;\n        }\n\n        if (false) {} else if (!pages.includes(fsPathname)) {\n          const resolvedPathname = resolveDynamicRoute(fsPathname, pages);\n\n          if (resolvedPathname !== fsPathname) {\n            fsPathname = resolvedPathname;\n          }\n        }\n\n        const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizeLocalePath).normalizeLocalePath((0, _removeBasePath).removeBasePath(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;\n\n        if ((0, _isDynamic).isDynamicRoute(resolvedHref)) {\n          const matches = (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(resolvedHref))(as);\n          Object.assign(parsedRewriteTarget.query, matches || {});\n        }\n\n        return {\n          type: 'rewrite',\n          parsedAs: parsedRewriteTarget,\n          resolvedHref\n        };\n      });\n    }\n\n    const src = (0, _parsePath).parsePath(source);\n    const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n      nextConfig,\n      parseData: true\n    }), {\n      defaultLocale: options.router.defaultLocale,\n      buildId: ''\n    }));\n    return Promise.resolve({\n      type: 'redirect-external',\n      destination: `${pathname}${src.query}${src.hash}`\n    });\n  }\n\n  const redirectTarget = response.headers.get('x-nextjs-redirect');\n\n  if (redirectTarget) {\n    if (redirectTarget.startsWith('/')) {\n      const src = (0, _parsePath).parsePath(redirectTarget);\n      const pathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo(_extends({}, (0, _getNextPathnameInfo).getNextPathnameInfo(src.pathname, {\n        nextConfig,\n        parseData: true\n      }), {\n        defaultLocale: options.router.defaultLocale,\n        buildId: ''\n      }));\n      return Promise.resolve({\n        type: 'redirect-internal',\n        newAs: `${pathname}${src.query}${src.hash}`,\n        newUrl: `${pathname}${src.query}${src.hash}`\n      });\n    }\n\n    return Promise.resolve({\n      type: 'redirect-external',\n      destination: redirectTarget\n    });\n  }\n\n  return Promise.resolve({\n    type: 'next'\n  });\n}\n\nfunction withMiddlewareEffects(options) {\n  return _withMiddlewareEffects.apply(this, arguments);\n}\n\nfunction _withMiddlewareEffects() {\n  _withMiddlewareEffects = _async_to_generator(function* (options) {\n    const matches = yield matchesMiddleware(options);\n\n    if (!matches || !options.fetchData) {\n      return null;\n    }\n\n    try {\n      const data = yield options.fetchData();\n      const effect = yield getMiddlewareData(data.dataHref, data.response, options);\n      return {\n        dataHref: data.dataHref,\n        json: data.json,\n        response: data.response,\n        text: data.text,\n        cacheKey: data.cacheKey,\n        effect\n      };\n    } catch (e) {\n      /**\n      * TODO: Revisit this in the future.\n      * For now we will not consider middleware data errors to be fatal.\n      * maybe we should revisit in the future.\n      */\n      return null;\n    }\n  });\n  return _withMiddlewareEffects.apply(this, arguments);\n}\n\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\n\nfunction fetchRetry(url, attempts, options) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n    method: options.method || 'GET',\n    headers: Object.assign({}, options.headers, {\n      'x-nextjs-data': '1'\n    })\n  }).then(response => {\n    return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;\n  });\n}\n\nfunction handleSmoothScroll(fn) {\n  const htmlElement = document.documentElement;\n  const existing = htmlElement.style.scrollBehavior;\n  htmlElement.style.scrollBehavior = 'auto'; // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n  // Otherwise it will not pickup the change in scrollBehavior\n  // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n\n  htmlElement.getClientRects();\n  fn();\n  htmlElement.style.scrollBehavior = existing;\n}\n\nfunction tryToParseAsJSON(text) {\n  try {\n    return JSON.parse(text);\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction fetchNextData({\n  dataHref,\n  inflightCache,\n  isPrefetch,\n  hasMiddleware,\n  isServerRender,\n  parseJSON,\n  persistCache,\n  isBackground,\n  unstable_skipClientCache\n}) {\n  const {\n    href: cacheKey\n  } = new URL(dataHref, window.location.href);\n  var ref1;\n\n  const getData = params => {\n    return fetchRetry(dataHref, isServerRender ? 3 : 1, {\n      headers: Object.assign({}, isPrefetch ? {\n        purpose: 'prefetch'\n      } : {}, isPrefetch && hasMiddleware ? {\n        'x-middleware-prefetch': '1'\n      } : {}),\n      method: (ref1 = params == null ? void 0 : params.method) != null ? ref1 : 'GET'\n    }).then(response => {\n      if (response.ok && (params == null ? void 0 : params.method) === 'HEAD') {\n        return {\n          dataHref,\n          response,\n          text: '',\n          json: {},\n          cacheKey\n        };\n      }\n\n      return response.text().then(text => {\n        if (!response.ok) {\n          /**\n          * When the data response is a redirect because of a middleware\n          * we do not consider it an error. The headers must bring the\n          * mapped location.\n          * TODO: Change the status code in the handler.\n          */\n          if (hasMiddleware && [301, 302, 307, 308].includes(response.status)) {\n            return {\n              dataHref,\n              response,\n              text,\n              json: {},\n              cacheKey\n            };\n          }\n\n          if (!hasMiddleware && response.status === 404) {\n            var ref;\n\n            if ((ref = tryToParseAsJSON(text)) == null ? void 0 : ref.notFound) {\n              return {\n                dataHref,\n                json: {\n                  notFound: SSG_DATA_NOT_FOUND\n                },\n                response,\n                text,\n                cacheKey\n              };\n            }\n          }\n\n          const error = new Error(`Failed to load static props`);\n          /**\n          * We should only trigger a server-side transition if this was\n          * caused on a client-side transition. Otherwise, we'd get into\n          * an infinite loop.\n          */\n\n          if (!isServerRender) {\n            (0, _routeLoader).markAssetError(error);\n          }\n\n          throw error;\n        }\n\n        return {\n          dataHref,\n          json: parseJSON ? tryToParseAsJSON(text) : null,\n          response,\n          text,\n          cacheKey\n        };\n      });\n    }).then(data => {\n      if (!persistCache || true || 0) {\n        delete inflightCache[cacheKey];\n      }\n\n      return data;\n    }).catch(err => {\n      if (!unstable_skipClientCache) {\n        delete inflightCache[cacheKey];\n      }\n\n      if (err.message === 'Failed to fetch') {\n        (0, _routeLoader).markAssetError(err);\n      }\n\n      throw err;\n    });\n  }; // when skipping client cache we wait to update\n  // inflight cache until successful data response\n  // this allows racing click event with fetching newer data\n  // without blocking navigation when stale data is available\n\n\n  if (unstable_skipClientCache && persistCache) {\n    return getData({}).then(data => {\n      inflightCache[cacheKey] = Promise.resolve(data);\n      return data;\n    });\n  }\n\n  if (inflightCache[cacheKey] !== undefined) {\n    return inflightCache[cacheKey];\n  }\n\n  return inflightCache[cacheKey] = getData(isBackground ? {\n    method: 'HEAD'\n  } : {});\n}\n\nfunction createKey() {\n  return Math.random().toString(36).slice(2, 10);\n}\n\nfunction handleHardNavigation({\n  url,\n  router\n}) {\n  // ensure we don't trigger a hard navigation to the same\n  // URL as this can end up with an infinite refresh\n  if (url === (0, _addBasePath).addBasePath((0, _addLocale).addLocale(router.asPath, router.locale))) {\n    throw new Error(`Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`);\n  }\n\n  window.location.href = url;\n}\n\nconst getCancelledHandler = ({\n  route,\n  router\n}) => {\n  let cancelled = false;\n\n  const cancel = router.clc = () => {\n    cancelled = true;\n  };\n\n  const handleCancelled = () => {\n    if (cancelled) {\n      const error = new Error(`Abort fetching component for route: \"${route}\"`);\n      error.cancelled = true;\n      throw error;\n    }\n\n    if (cancel === router.clc) {\n      router.clc = null;\n    }\n  };\n\n  return handleCancelled;\n};\n\nclass Router {\n  reload() {\n    window.location.reload();\n  }\n  /**\n  * Go back in history\n  */\n\n\n  back() {\n    window.history.back();\n  }\n  /**\n  * Go forward in history\n  */\n\n\n  forward() {\n    window.history.forward();\n  }\n  /**\n  * Performs a `pushState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  push(url, as, options = {}) {\n    if (false) {}\n\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('pushState', url, as, options);\n  }\n  /**\n  * Performs a `replaceState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  replace(url, as, options = {}) {\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('replaceState', url, as, options);\n  }\n\n  change(method, url, as, options, forcedScroll) {\n    var _this = this;\n\n    return _async_to_generator(function* () {\n      if (!isLocalURL(url)) {\n        handleHardNavigation({\n          url,\n          router: _this\n        });\n        return false;\n      } // WARNING: `_h` is an internal option for handing Next.js client-side\n      // hydration. Your app should _never_ use this property. It may change at\n      // any time without notice.\n\n\n      const isQueryUpdating = options._h === 1;\n      let shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsePath).parsePath(url).pathname === (0, _parsePath).parsePath(as).pathname;\n\n      const nextState = _extends({}, _this.state); // for static pages with query params in the URL we delay\n      // marking the router ready until after the query is updated\n      // or a navigation has occurred\n\n\n      const readyStateChange = _this.isReady !== true;\n      _this.isReady = true;\n      const isSsr = _this.isSsr;\n\n      if (!isQueryUpdating) {\n        _this.isSsr = false;\n      } // if a route transition is already in progress before\n      // the query updating is triggered ignore query updating\n\n\n      if (isQueryUpdating && _this.clc) {\n        return false;\n      }\n\n      const prevLocale = nextState.locale;\n\n      if (false) { var ref; } // marking route changes as a navigation start entry\n\n\n      if (_utils.ST) {\n        performance.mark('routeChange');\n      }\n\n      const {\n        shallow = false,\n        scroll = true\n      } = options;\n      const routeProps = {\n        shallow\n      };\n\n      if (_this._inFlightRoute && _this.clc) {\n        if (!isSsr) {\n          Router.events.emit('routeChangeError', buildCancellationError(), _this._inFlightRoute, routeProps);\n        }\n\n        _this.clc();\n\n        _this.clc = null;\n      }\n\n      as = (0, _addBasePath).addBasePath((0, _addLocale).addLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, options.locale, _this.defaultLocale));\n      const cleanedAs = (0, _removeLocale).removeLocale((0, _hasBasePath).hasBasePath(as) ? (0, _removeBasePath).removeBasePath(as) : as, nextState.locale);\n      _this._inFlightRoute = as;\n      const localeChange = prevLocale !== nextState.locale; // If the url change is only related to a hash change\n      // We should not proceed. We should only change the state.\n\n      if (!isQueryUpdating && _this.onlyAHashChange(cleanedAs) && !localeChange) {\n        nextState.asPath = cleanedAs;\n        Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?\n\n        _this.changeState(method, url, as, _extends({}, options, {\n          scroll: false\n        }));\n\n        if (scroll) {\n          _this.scrollToHash(cleanedAs);\n        }\n\n        try {\n          yield _this.set(nextState, _this.components[nextState.route], null);\n        } catch (err) {\n          if ((0, _isError).default(err) && err.cancelled) {\n            Router.events.emit('routeChangeError', err, cleanedAs, routeProps);\n          }\n\n          throw err;\n        }\n\n        Router.events.emit('hashChangeComplete', as, routeProps);\n        return true;\n      }\n\n      let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n      let {\n        pathname,\n        query\n      } = parsed; // The build manifest needs to be loaded before auto-static dynamic pages\n      // get their query parameters to allow ensuring they can be parsed properly\n      // when rewritten to\n\n      let pages, rewrites;\n\n      try {\n        [pages, {\n          __rewrites: rewrites\n        }] = yield Promise.all([_this.pageLoader.getPageList(), (0, _routeLoader).getClientBuildManifest(), _this.pageLoader.getMiddleware()]);\n      } catch (err) {\n        // If we fail to resolve the page list or client-build manifest, we must\n        // do a server-side transition:\n        handleHardNavigation({\n          url: as,\n          router: _this\n        });\n        return false;\n      } // If asked to change the current URL we should reload the current page\n      // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n      // We also need to set the method = replaceState always\n      // as this should not go into the history (That's how browsers work)\n      // We should compare the new asPath to the current asPath, not the url\n\n\n      if (!_this.urlIsNew(cleanedAs) && !localeChange) {\n        method = 'replaceState';\n      } // we need to resolve the as value using rewrites for dynamic SSG\n      // pages to allow building the data URL correctly\n\n\n      let resolvedAs = as; // url and as should always be prefixed with basePath by this\n      // point by either next/link or router.push/replace so strip the\n      // basePath from the pathname to match the pages dir 1-to-1\n\n      pathname = pathname ? (0, _removeTrailingSlash).removeTrailingSlash((0, _removeBasePath).removeBasePath(pathname)) : pathname;\n      let route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n      const parsedAsPathname = as.startsWith('/') && (0, _parseRelativeUrl).parseRelativeUrl(as).pathname;\n      const isMiddlewareRewrite = !!(parsedAsPathname && route !== parsedAsPathname && (!(0, _isDynamic).isDynamicRoute(route) || !(0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(route))(parsedAsPathname))); // we don't attempt resolve asPath when we need to execute\n      // middleware as the resolving will occur server-side\n\n      const isMiddlewareMatch = !options.shallow && (yield matchesMiddleware({\n        asPath: as,\n        locale: nextState.locale,\n        router: _this\n      }));\n\n      if (isQueryUpdating && isMiddlewareMatch) {\n        shouldResolveHref = false;\n      }\n\n      if (shouldResolveHref && pathname !== '/_error') {\n        options._shouldResolveHref = true;\n\n        if (false) {} else {\n          parsed.pathname = resolveDynamicRoute(pathname, pages);\n\n          if (parsed.pathname !== pathname) {\n            pathname = parsed.pathname;\n            parsed.pathname = (0, _addBasePath).addBasePath(pathname);\n\n            if (!isMiddlewareMatch) {\n              url = (0, _formatUrl).formatWithValidation(parsed);\n            }\n          }\n        }\n      }\n\n      if (!isLocalURL(as)) {\n        if (true) {\n          throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n        }\n\n        handleHardNavigation({\n          url: as,\n          router: _this\n        });\n        return false;\n      }\n\n      resolvedAs = (0, _removeLocale).removeLocale((0, _removeBasePath).removeBasePath(resolvedAs), nextState.locale);\n      route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n      let routeMatch = false;\n\n      if ((0, _isDynamic).isDynamicRoute(route)) {\n        const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n        const asPathname = parsedAs.pathname;\n        const routeRegex = (0, _routeRegex).getRouteRegex(route);\n        routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n        const shouldInterpolate = route === asPathname;\n        const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n\n        if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n          const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param] && !routeRegex.groups[param].optional);\n\n          if (missingParams.length > 0 && !isMiddlewareMatch) {\n            if (true) {\n              console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n            }\n\n            throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);\n          }\n        } else if (shouldInterpolate) {\n          as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omit(query, interpolatedAs.params)\n          }));\n        } else {\n          // Merge params into `query`, overwriting any specified in search\n          Object.assign(query, routeMatch);\n        }\n      }\n\n      if (!isQueryUpdating) {\n        Router.events.emit('routeChangeStart', as, routeProps);\n      }\n\n      try {\n        var ref2, ref3, ref4;\n        let routeInfo = yield _this.getRouteInfo({\n          route,\n          pathname,\n          query,\n          as,\n          resolvedAs,\n          routeProps,\n          locale: nextState.locale,\n          isPreview: nextState.isPreview,\n          hasMiddleware: isMiddlewareMatch,\n          unstable_skipClientCache: options.unstable_skipClientCache,\n          isQueryUpdating: isQueryUpdating && !_this.isFallback,\n          isMiddlewareRewrite\n        });\n\n        if ('route' in routeInfo && isMiddlewareMatch) {\n          pathname = routeInfo.route || route;\n          route = pathname;\n\n          if (!routeProps.shallow) {\n            query = Object.assign({}, routeInfo.query || {}, query);\n          }\n\n          const cleanedParsedPathname = (0, _hasBasePath).hasBasePath(parsed.pathname) ? (0, _removeBasePath).removeBasePath(parsed.pathname) : parsed.pathname;\n\n          if (routeMatch && pathname !== cleanedParsedPathname) {\n            Object.keys(routeMatch).forEach(key => {\n              if (routeMatch && query[key] === routeMatch[key]) {\n                delete query[key];\n              }\n            });\n          }\n\n          if ((0, _isDynamic).isDynamicRoute(pathname)) {\n            const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addBasePath).addBasePath((0, _addLocale).addLocale(new URL(as, location.href).pathname, nextState.locale), true);\n            let rewriteAs = prefixedAs;\n\n            if ((0, _hasBasePath).hasBasePath(rewriteAs)) {\n              rewriteAs = (0, _removeBasePath).removeBasePath(rewriteAs);\n            }\n\n            if (false) {}\n\n            const routeRegex = (0, _routeRegex).getRouteRegex(pathname);\n            const curRouteMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(new URL(rewriteAs, location.href).pathname);\n\n            if (curRouteMatch) {\n              Object.assign(query, curRouteMatch);\n            }\n          }\n        } // If the routeInfo brings a redirect we simply apply it.\n\n\n        if ('type' in routeInfo) {\n          if (routeInfo.type === 'redirect-internal') {\n            return _this.change(method, routeInfo.newUrl, routeInfo.newAs, options);\n          } else {\n            handleHardNavigation({\n              url: routeInfo.destination,\n              router: _this\n            });\n            return new Promise(() => {});\n          }\n        }\n\n        const component = routeInfo.Component;\n\n        if (component && component.unstable_scriptLoader) {\n          const scripts = [].concat(component.unstable_scriptLoader());\n          scripts.forEach(script => {\n            (0, _script).handleClientScriptLoad(script.props);\n          });\n        } // handle redirect on client-transition\n\n\n        if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {\n          if (routeInfo.props.pageProps && routeInfo.props.pageProps.__N_REDIRECT) {\n            // Use the destination from redirect without adding locale\n            options.locale = false;\n            const destination = routeInfo.props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n            // client-navigation if it is falling back to hard navigation if\n            // it's not\n\n            if (destination.startsWith('/') && routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n              const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n              parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n              const {\n                url: newUrl,\n                as: newAs\n              } = prepareUrlAs(_this, destination, destination);\n              return _this.change(method, newUrl, newAs, options);\n            }\n\n            handleHardNavigation({\n              url: destination,\n              router: _this\n            });\n            return new Promise(() => {});\n          }\n\n          nextState.isPreview = !!routeInfo.props.__N_PREVIEW; // handle SSG data 404\n\n          if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {\n            let notFoundRoute;\n\n            try {\n              yield _this.fetchComponent('/404');\n              notFoundRoute = '/404';\n            } catch (_) {\n              notFoundRoute = '/_error';\n            }\n\n            routeInfo = yield _this.getRouteInfo({\n              route: notFoundRoute,\n              pathname: notFoundRoute,\n              query,\n              as,\n              resolvedAs,\n              routeProps: {\n                shallow: false\n              },\n              locale: nextState.locale,\n              isPreview: nextState.isPreview\n            });\n\n            if ('type' in routeInfo) {\n              throw new Error(`Unexpected middleware effect on /404`);\n            }\n          }\n        }\n\n        if (isQueryUpdating && _this.pathname === '/_error' && ((ref2 = self.__NEXT_DATA__.props) == null ? void 0 : (ref3 = ref2.pageProps) == null ? void 0 : ref3.statusCode) === 500 && ((ref4 = routeInfo.props) == null ? void 0 : ref4.pageProps)) {\n          // ensure statusCode is still correct for static 500 page\n          // when updating query information\n          routeInfo.props.pageProps.statusCode = 500;\n        }\n\n        var _route; // shallow routing is only allowed for same page URL changes.\n\n\n        const isValidShallowRoute = options.shallow && nextState.route === ((_route = routeInfo.route) != null ? _route : route);\n\n        var _scroll;\n\n        const shouldScroll = (_scroll = options.scroll) != null ? _scroll : !isQueryUpdating && !isValidShallowRoute;\n        const resetScroll = shouldScroll ? {\n          x: 0,\n          y: 0\n        } : null;\n        const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll; // the new state that the router gonna set\n\n        const upcomingRouterState = _extends({}, nextState, {\n          route,\n          pathname,\n          query,\n          asPath: cleanedAs,\n          isFallback: false\n        }); // When the page being rendered is the 404 page, we should only update the\n        // query parameters. Route changes here might add the basePath when it\n        // wasn't originally present. This is also why this block is before the\n        // below `changeState` call which updates the browser's history (changing\n        // the URL).\n\n\n        if (isQueryUpdating && (_this.pathname === '/404' || _this.pathname === '/_error')) {\n          var ref5, ref6, ref7;\n          routeInfo = yield _this.getRouteInfo({\n            route: _this.pathname,\n            pathname: _this.pathname,\n            query,\n            as,\n            resolvedAs,\n            routeProps: {\n              shallow: false\n            },\n            locale: nextState.locale,\n            isPreview: nextState.isPreview\n          });\n\n          if ('type' in routeInfo) {\n            throw new Error(`Unexpected middleware effect on ${_this.pathname}`);\n          }\n\n          if (_this.pathname === '/_error' && ((ref5 = self.__NEXT_DATA__.props) == null ? void 0 : (ref6 = ref5.pageProps) == null ? void 0 : ref6.statusCode) === 500 && ((ref7 = routeInfo.props) == null ? void 0 : ref7.pageProps)) {\n            // ensure statusCode is still correct for static 500 page\n            // when updating query information\n            routeInfo.props.pageProps.statusCode = 500;\n          }\n\n          try {\n            yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n          } catch (err) {\n            if ((0, _isError).default(err) && err.cancelled) {\n              Router.events.emit('routeChangeError', err, cleanedAs, routeProps);\n            }\n\n            throw err;\n          }\n\n          return true;\n        }\n\n        Router.events.emit('beforeHistoryChange', as, routeProps);\n\n        _this.changeState(method, url, as, options); // for query updates we can skip it if the state is unchanged and we don't\n        // need to scroll\n        // https://github.com/vercel/next.js/issues/37139\n\n\n        const canSkipUpdating = isQueryUpdating && !upcomingScrollState && !readyStateChange && !localeChange && (0, _compareStates).compareRouterStates(upcomingRouterState, _this.state);\n\n        if (!canSkipUpdating) {\n          try {\n            yield _this.set(upcomingRouterState, routeInfo, upcomingScrollState);\n          } catch (e) {\n            if (e.cancelled) routeInfo.error = routeInfo.error || e;else throw e;\n          }\n\n          if (routeInfo.error) {\n            if (!isQueryUpdating) {\n              Router.events.emit('routeChangeError', routeInfo.error, cleanedAs, routeProps);\n            }\n\n            throw routeInfo.error;\n          }\n\n          if (false) {}\n\n          if (!isQueryUpdating) {\n            Router.events.emit('routeChangeComplete', as, routeProps);\n          } // A hash mark # is the optional last part of a URL\n\n\n          const hashRegex = /#.+$/;\n\n          if (shouldScroll && hashRegex.test(as)) {\n            _this.scrollToHash(as);\n          }\n        }\n\n        return true;\n      } catch (err1) {\n        if ((0, _isError).default(err1) && err1.cancelled) {\n          return false;\n        }\n\n        throw err1;\n      }\n    })();\n  }\n\n  changeState(method, url, as, options = {}) {\n    if (true) {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`);\n        return;\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`);\n        return;\n      }\n    }\n\n    if (method !== 'pushState' || (0, _utils).getURL() !== as) {\n      this._shallow = options.shallow;\n      window.history[method]({\n        url,\n        as,\n        options,\n        __N: true,\n        key: this._key = method !== 'pushState' ? this._key : createKey()\n      }, // Most browsers currently ignores this parameter, although they may use it in the future.\n      // Passing the empty string here should be safe against future changes to the method.\n      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n      '', as);\n    }\n  }\n\n  handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n    var _this = this;\n\n    return _async_to_generator(function* () {\n      console.error(err);\n\n      if (err.cancelled) {\n        // bubble up cancellation errors\n        throw err;\n      }\n\n      if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n        Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons\n        //  1. Page doesn't exists\n        //  2. Page does exist in a different zone\n        //  3. Internal error while loading the page\n        // So, doing a hard reload is the proper way to deal with this.\n\n        handleHardNavigation({\n          url: as,\n          router: _this\n        }); // Changing the URL doesn't block executing the current code path.\n        // So let's throw a cancellation error stop the routing logic.\n\n        throw buildCancellationError();\n      }\n\n      try {\n        let props;\n        const {\n          page: Component,\n          styleSheets\n        } = yield _this.fetchComponent('/_error');\n        const routeInfo = {\n          props,\n          Component,\n          styleSheets,\n          err,\n          error: err\n        };\n\n        if (!routeInfo.props) {\n          try {\n            routeInfo.props = yield _this.getInitialProps(Component, {\n              err,\n              pathname,\n              query\n            });\n          } catch (gipErr) {\n            console.error('Error in error page `getInitialProps`: ', gipErr);\n            routeInfo.props = {};\n          }\n        }\n\n        return routeInfo;\n      } catch (routeInfoErr) {\n        return _this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as, routeProps, true);\n      }\n    })();\n  }\n\n  getRouteInfo({\n    route: requestedRoute,\n    pathname,\n    query,\n    as,\n    resolvedAs,\n    routeProps,\n    locale,\n    hasMiddleware,\n    isPreview,\n    unstable_skipClientCache,\n    isQueryUpdating,\n    isMiddlewareRewrite\n  }) {\n    var _this = this;\n\n    return _async_to_generator(function* () {\n      /**\n      * This `route` binding can change if there's a rewrite\n      * so we keep a reference to the original requested route\n      * so we can store the cache for it and avoid re-requesting every time\n      * for shallow routing purposes.\n      */\n      let route = requestedRoute;\n\n      try {\n        var ref, ref8, ref9, ref10;\n        const handleCancelled = getCancelledHandler({\n          route,\n          router: _this\n        });\n        let existingInfo = _this.components[route];\n\n        if (routeProps.shallow && existingInfo && _this.route === route) {\n          return existingInfo;\n        }\n\n        if (hasMiddleware) {\n          existingInfo = undefined;\n        }\n\n        let cachedRouteInfo = existingInfo && !('initial' in existingInfo) && false ? 0 : undefined;\n        const isBackground = isQueryUpdating;\n        const fetchNextDataParams = {\n          dataHref: _this.pageLoader.getDataHref({\n            href: (0, _formatUrl).formatWithValidation({\n              pathname,\n              query\n            }),\n            skipInterpolation: true,\n            asPath: resolvedAs,\n            locale\n          }),\n          hasMiddleware: true,\n          isServerRender: _this.isSsr,\n          parseJSON: true,\n          inflightCache: isBackground ? _this.sbc : _this.sdc,\n          persistCache: !isPreview,\n          isPrefetch: false,\n          unstable_skipClientCache,\n          isBackground\n        };\n        let data = isQueryUpdating && !isMiddlewareRewrite ? null : yield withMiddlewareEffects({\n          fetchData: () => fetchNextData(fetchNextDataParams),\n          asPath: resolvedAs,\n          locale: locale,\n          router: _this\n        }).catch(err => {\n          // we don't hard error during query updating\n          // as it's un-necessary and doesn't need to be fatal\n          // unless it is a fallback route and the props can't\n          // be loaded\n          if (isQueryUpdating) {\n            return null;\n          }\n\n          throw err;\n        });\n\n        if (isQueryUpdating) {\n          if (!data) {\n            data = {\n              json: self.__NEXT_DATA__.props\n            };\n          } else {\n            data.json = self.__NEXT_DATA__.props;\n          }\n        }\n\n        handleCancelled();\n\n        if ((data == null ? void 0 : (ref = data.effect) == null ? void 0 : ref.type) === 'redirect-internal' || (data == null ? void 0 : (ref8 = data.effect) == null ? void 0 : ref8.type) === 'redirect-external') {\n          return data.effect;\n        }\n\n        if ((data == null ? void 0 : (ref9 = data.effect) == null ? void 0 : ref9.type) === 'rewrite') {\n          const resolvedRoute = (0, _removeTrailingSlash).removeTrailingSlash(data.effect.resolvedHref);\n          const pages = yield _this.pageLoader.getPageList(); // during query updating the page must match although during\n          // client-transition a redirect that doesn't match a page\n          // can be returned and this should trigger a hard navigation\n          // which is valid for incremental migration\n\n          if (!isQueryUpdating || pages.includes(resolvedRoute)) {\n            route = resolvedRoute;\n            pathname = data.effect.resolvedHref;\n            query = _extends({}, query, data.effect.parsedAs.query);\n            resolvedAs = (0, _removeBasePath).removeBasePath((0, _normalizeLocalePath).normalizeLocalePath(data.effect.parsedAs.pathname, _this.locales).pathname); // Check again the cache with the new destination.\n\n            existingInfo = _this.components[route];\n\n            if (routeProps.shallow && existingInfo && _this.route === route && !hasMiddleware) {\n              // If we have a match with the current route due to rewrite,\n              // we can copy the existing information to the rewritten one.\n              // Then, we return the information along with the matched route.\n              return _extends({}, existingInfo, {\n                route\n              });\n            }\n          }\n        }\n\n        if ((0, _isApiRoute).isAPIRoute(route)) {\n          handleHardNavigation({\n            url: as,\n            router: _this\n          });\n          return new Promise(() => {});\n        }\n\n        const routeInfo = cachedRouteInfo || (yield _this.fetchComponent(route).then(res => ({\n          Component: res.page,\n          styleSheets: res.styleSheets,\n          __N_SSG: res.mod.__N_SSG,\n          __N_SSP: res.mod.__N_SSP\n        })));\n\n        if (true) {\n          const {\n            isValidElementType\n          } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n\n          if (!isValidElementType(routeInfo.Component)) {\n            throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n          }\n        }\n\n        const wasBailedPrefetch = data == null ? void 0 : (ref10 = data.response) == null ? void 0 : ref10.headers.get('x-middleware-skip');\n        const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP; // For non-SSG prefetches that bailed before sending data\n        // we clear the cache to fetch full response\n\n        if (wasBailedPrefetch && (data == null ? void 0 : data.dataHref)) {\n          delete _this.sdc[data.dataHref];\n        }\n\n        const {\n          props,\n          cacheKey\n        } = yield _this._getData(_async_to_generator(function* () {\n          if (shouldFetchData) {\n            if ((data == null ? void 0 : data.json) && !wasBailedPrefetch) {\n              return {\n                cacheKey: data.cacheKey,\n                props: data.json\n              };\n            }\n\n            const dataHref = (data == null ? void 0 : data.dataHref) ? data.dataHref : _this.pageLoader.getDataHref({\n              href: (0, _formatUrl).formatWithValidation({\n                pathname,\n                query\n              }),\n              asPath: resolvedAs,\n              locale\n            });\n            const fetched = yield fetchNextData({\n              dataHref,\n              isServerRender: _this.isSsr,\n              parseJSON: true,\n              inflightCache: wasBailedPrefetch ? {} : _this.sdc,\n              persistCache: !isPreview,\n              isPrefetch: false,\n              unstable_skipClientCache\n            });\n            return {\n              cacheKey: fetched.cacheKey,\n              props: fetched.json || {}\n            };\n          }\n\n          return {\n            headers: {},\n            props: yield _this.getInitialProps(routeInfo.Component, // we provide AppTree later so this needs to be `any`\n            {\n              pathname,\n              query,\n              asPath: as,\n              locale,\n              locales: _this.locales,\n              defaultLocale: _this.defaultLocale\n            })\n          };\n        })); // Only bust the data cache for SSP routes although\n        // middleware can skip cache per request with\n        // x-middleware-cache: no-cache as well\n\n        if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {\n          delete _this.sdc[cacheKey];\n        } // we kick off a HEAD request in the background\n        // when a non-prefetch request is made to signal revalidation\n\n\n        if (!_this.isPreview && routeInfo.__N_SSG && false && 0) {}\n\n        props.pageProps = Object.assign({}, props.pageProps);\n        routeInfo.props = props;\n        routeInfo.route = route;\n        routeInfo.query = query;\n        routeInfo.resolvedAs = resolvedAs;\n        _this.components[route] = routeInfo;\n        return routeInfo;\n      } catch (err) {\n        return _this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n      }\n    })();\n  }\n\n  set(state, data, resetScroll) {\n    this.state = state;\n    return this.sub(data, this.components['/_app'].Component, resetScroll);\n  }\n  /**\n  * Callback to execute before replacing router state\n  * @param cb callback to be executed\n  */\n\n\n  beforePopState(cb) {\n    this._bps = cb;\n  }\n\n  onlyAHashChange(as) {\n    if (!this.asPath) return false;\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same\n\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true;\n    } // If the urls are change, there's more than a hash change\n\n\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false;\n    } // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n\n\n    return oldHash !== newHash;\n  }\n\n  scrollToHash(as) {\n    const [, hash = ''] = as.split('#'); // Scroll to top if the hash is just `#` with no value or `#top`\n    // To mirror browsers\n\n    if (hash === '' || hash === 'top') {\n      handleSmoothScroll(() => window.scrollTo(0, 0));\n      return;\n    } // Decode hash to make non-latin anchor works.\n\n\n    const rawHash = decodeURIComponent(hash); // First we check if the element by id is found\n\n    const idEl = document.getElementById(rawHash);\n\n    if (idEl) {\n      handleSmoothScroll(() => idEl.scrollIntoView());\n      return;\n    } // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n\n\n    const nameEl = document.getElementsByName(rawHash)[0];\n\n    if (nameEl) {\n      handleSmoothScroll(() => nameEl.scrollIntoView());\n    }\n  }\n\n  urlIsNew(asPath) {\n    return this.asPath !== asPath;\n  }\n  /**\n  * Prefetch page code, you may wait for the data during page rendering.\n  * This feature only works in production!\n  * @param url the href of prefetched page\n  * @param asPath the as path of the prefetched page\n  */\n\n\n  prefetch(url, asPath = url, options = {}) {\n    var _this = this;\n\n    return _async_to_generator(function* () {\n      // Prefetch is not supported in development mode because it would trigger on-demand-entries\n      if (true) {\n        return;\n      }\n\n      if (false) {}\n\n      let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n      let {\n        pathname,\n        query\n      } = parsed;\n      const originalPathname = pathname;\n\n      if (false) {}\n\n      const pages = yield _this.pageLoader.getPageList();\n      let resolvedAs = asPath;\n      const locale = typeof options.locale !== 'undefined' ? options.locale || undefined : _this.locale;\n      const isMiddlewareMatch = yield matchesMiddleware({\n        asPath: asPath,\n        locale: locale,\n        router: _this\n      });\n\n      if (false) {}\n\n      parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n\n      if ((0, _isDynamic).isDynamicRoute(parsed.pathname)) {\n        pathname = parsed.pathname;\n        parsed.pathname = pathname;\n        Object.assign(query, (0, _routeMatcher).getRouteMatcher((0, _routeRegex).getRouteRegex(parsed.pathname))((0, _parsePath).parsePath(asPath).pathname) || {});\n\n        if (!isMiddlewareMatch) {\n          url = (0, _formatUrl).formatWithValidation(parsed);\n        }\n      }\n\n      const data =  false ? 0 : yield withMiddlewareEffects({\n        fetchData: () => fetchNextData({\n          dataHref: _this.pageLoader.getDataHref({\n            href: (0, _formatUrl).formatWithValidation({\n              pathname: originalPathname,\n              query\n            }),\n            skipInterpolation: true,\n            asPath: resolvedAs,\n            locale\n          }),\n          hasMiddleware: true,\n          isServerRender: _this.isSsr,\n          parseJSON: true,\n          inflightCache: _this.sdc,\n          persistCache: !_this.isPreview,\n          isPrefetch: true\n        }),\n        asPath: asPath,\n        locale: locale,\n        router: _this\n      });\n      /**\n      * If there was a rewrite we apply the effects of the rewrite on the\n      * current parameters for the prefetch.\n      */\n\n      if ((data == null ? void 0 : data.effect.type) === 'rewrite') {\n        parsed.pathname = data.effect.resolvedHref;\n        pathname = data.effect.resolvedHref;\n        query = _extends({}, query, data.effect.parsedAs.query);\n        resolvedAs = data.effect.parsedAs.pathname;\n        url = (0, _formatUrl).formatWithValidation(parsed);\n      }\n      /**\n      * If there is a redirect to an external destination then we don't have\n      * to prefetch content as it will be unused.\n      */\n\n\n      if ((data == null ? void 0 : data.effect.type) === 'redirect-external') {\n        return;\n      }\n\n      const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname);\n      yield Promise.all([_this.pageLoader._isSsg(route).then(isSsg => {\n        return isSsg ? fetchNextData({\n          dataHref: (data == null ? void 0 : data.json) ? data == null ? void 0 : data.dataHref : _this.pageLoader.getDataHref({\n            href: url,\n            asPath: resolvedAs,\n            locale: locale\n          }),\n          isServerRender: false,\n          parseJSON: true,\n          inflightCache: _this.sdc,\n          persistCache: !_this.isPreview,\n          isPrefetch: true,\n          unstable_skipClientCache: options.unstable_skipClientCache || options.priority && !!true\n        }).then(() => false) : false;\n      }), _this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n    })();\n  }\n\n  fetchComponent(route) {\n    var _this = this;\n\n    return _async_to_generator(function* () {\n      const handleCancelled = getCancelledHandler({\n        route,\n        router: _this\n      });\n\n      try {\n        const componentResult = yield _this.pageLoader.loadPage(route);\n        handleCancelled();\n        return componentResult;\n      } catch (err) {\n        handleCancelled();\n        throw err;\n      }\n    })();\n  }\n\n  _getData(fn) {\n    let cancelled = false;\n\n    const cancel = () => {\n      cancelled = true;\n    };\n\n    this.clc = cancel;\n    return fn().then(data => {\n      if (cancel === this.clc) {\n        this.clc = null;\n      }\n\n      if (cancelled) {\n        const err = new Error('Loading initial props cancelled');\n        err.cancelled = true;\n        throw err;\n      }\n\n      return data;\n    });\n  }\n\n  _getFlightData(dataHref) {\n    // Do not cache RSC flight response since it's not a static resource\n    return fetchNextData({\n      dataHref,\n      isServerRender: true,\n      parseJSON: false,\n      inflightCache: this.sdc,\n      persistCache: false,\n      isPrefetch: false\n    }).then(({\n      text\n    }) => ({\n      data: text\n    }));\n  }\n\n  getInitialProps(Component, ctx) {\n    const {\n      Component: App\n    } = this.components['/_app'];\n\n    const AppTree = this._wrapApp(App);\n\n    ctx.AppTree = AppTree;\n    return (0, _utils).loadGetInitialProps(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx\n    });\n  }\n\n  get route() {\n    return this.state.route;\n  }\n\n  get pathname() {\n    return this.state.pathname;\n  }\n\n  get query() {\n    return this.state.query;\n  }\n\n  get asPath() {\n    return this.state.asPath;\n  }\n\n  get locale() {\n    return this.state.locale;\n  }\n\n  get isFallback() {\n    return this.state.isFallback;\n  }\n\n  get isPreview() {\n    return this.state.isPreview;\n  }\n\n  constructor(pathname1, query1, as1, {\n    initialProps,\n    pageLoader,\n    App,\n    wrapApp,\n    Component,\n    err,\n    subscription,\n    isFallback,\n    locale,\n    locales,\n    defaultLocale,\n    domainLocales,\n    isPreview\n  }) {\n    // Server Data Cache (full data requests)\n    this.sdc = {}; // Server Background Cache (HEAD requests)\n\n    this.sbc = {};\n    this.isFirstPopStateEvent = true;\n    this._key = createKey();\n\n    this.onPopState = e => {\n      const {\n        isFirstPopStateEvent\n      } = this;\n      this.isFirstPopStateEvent = false;\n      const state = e.state;\n\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        const {\n          pathname,\n          query\n        } = this;\n        this.changeState('replaceState', (0, _formatUrl).formatWithValidation({\n          pathname: (0, _addBasePath).addBasePath(pathname),\n          query\n        }), (0, _utils).getURL());\n        return;\n      } // __NA is used to identify if the history entry can be handled by the app-router.\n\n\n      if (state.__NA) {\n        window.location.reload();\n        return;\n      }\n\n      if (!state.__N) {\n        return;\n      } // Safari fires popstateevent when reopening the browser.\n\n\n      if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {\n        return;\n      }\n\n      let forcedScroll;\n      const {\n        url,\n        as,\n        options,\n        key\n      } = state;\n\n      if (false) {}\n\n      this._key = key;\n      const {\n        pathname\n      } = (0, _parseRelativeUrl).parseRelativeUrl(url); // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n      if (this.isSsr && as === (0, _addBasePath).addBasePath(this.asPath) && pathname === (0, _addBasePath).addBasePath(this.pathname)) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (this._bps && !this._bps(state)) {\n        return;\n      }\n\n      this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale,\n        // @ts-ignore internal value not exposed on types\n        _h: 0\n      }), forcedScroll);\n    }; // represents the current component key\n\n\n    const route = (0, _removeTrailingSlash).removeTrailingSlash(pathname1); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (pathname1 !== '/_error') {\n      this.components[route] = {\n        Component,\n        initial: true,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: []\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n\n    this.basePath =  false || '';\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isLocaleDomain = false;\n    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n\n    if (false) {}\n\n    this.state = {\n      route,\n      pathname: pathname1,\n      query: query1,\n      asPath: autoExportDynamic ? pathname1 : as1,\n      isPreview: !!isPreview,\n      locale:  false ? 0 : undefined,\n      isFallback\n    };\n    this._initialMatchesMiddlewarePromise = Promise.resolve(false);\n\n    if (false) {}\n  }\n\n}\n\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./pages/profile.js":
/*!**************************!*\
  !*** ./pages/profile.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getServerSideProps\": () => (/* binding */ getServerSideProps)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! swr */ \"swr\");\n/* harmony import */ var _components_AppLayout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/AppLayout */ \"./components/AppLayout.js\");\n/* harmony import */ var _components_NicknameEditForm__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/NicknameEditForm */ \"./components/NicknameEditForm.js\");\n/* harmony import */ var _components_FollowList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/FollowList */ \"./components/FollowList.js\");\n/* harmony import */ var _store_configureStore__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../store/configureStore */ \"./store/configureStore.js\");\n/* harmony import */ var _actions_post__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../actions/post */ \"./actions/post.js\");\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_4__, swr__WEBPACK_IMPORTED_MODULE_5__, _components_AppLayout__WEBPACK_IMPORTED_MODULE_6__, _components_NicknameEditForm__WEBPACK_IMPORTED_MODULE_7__, _components_FollowList__WEBPACK_IMPORTED_MODULE_8__, _store_configureStore__WEBPACK_IMPORTED_MODULE_9__, _actions_post__WEBPACK_IMPORTED_MODULE_10__, _actions_user__WEBPACK_IMPORTED_MODULE_11__]);\n([axios__WEBPACK_IMPORTED_MODULE_4__, swr__WEBPACK_IMPORTED_MODULE_5__, _components_AppLayout__WEBPACK_IMPORTED_MODULE_6__, _components_NicknameEditForm__WEBPACK_IMPORTED_MODULE_7__, _components_FollowList__WEBPACK_IMPORTED_MODULE_8__, _store_configureStore__WEBPACK_IMPORTED_MODULE_9__, _actions_post__WEBPACK_IMPORTED_MODULE_10__, _actions_user__WEBPACK_IMPORTED_MODULE_11__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\nvar _jsxFileName = \"/home/jawon0407/code/Nodebird/prepare/front/pages/profile.js\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst fetcher = url => axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(url, {\n  withCrendentials: true\n}).then(result => result.data);\n\nconst userSelector = state => state.user;\n\nconst Profile = () => {\n  const {\n    me\n  } = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(userSelector);\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(3);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(3); //data , error 가 없으면 로딩중이다\n\n  const {\n    data: followingsData,\n    error: followingError\n  } = (0,swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(`http://localhost:7777/user/followings?limit=${followingsLimit}`, fetcher);\n  const {\n    data: followersData,\n    error: followerError\n  } = (0,swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(`http://localhost:7777/user/followers?limit=${followersLimit}`, fetcher);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!(me && me.id)) {\n      alert('로그인이 필요합니다.');\n      next_router__WEBPACK_IMPORTED_MODULE_2___default().push('/');\n    }\n  }, [me && me.id]);\n  const loadMoreFollowings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMoreFollowers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return '내 정보 로딩 중...';\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생했습니다.';\n  }\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_AppLayout__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_NicknameEditForm__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_FollowList__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n        data: followingsData,\n        onClickMore: loadMoreFollowings,\n        loading: !followingsData && !followingError,\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_FollowList__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n        header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n        data: followersData,\n        onClickMore: loadMoreFollowers,\n        loading: !followersData && !followerError,\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, undefined)]\n  }, void 0, true);\n};\n\nconst getServerSideProps = _store_configureStore__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getServerSideProps(store => async ({\n  req\n}) => {\n  // SSR은 프론트 서버에서 실행되기 때문에, 쿠키를 직접 넣어줘야 한다.\n  const cookie = req ? req.headers.cookie : ''; // 쿠키를 사용하지 않는다면 쿠키를 비워준다 -> 쿠키가 남아있으면 다른 사용자의 정보를 가져올 수 있다.\n\n  axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].defaults.headers.Cookie = ''; // 쿠키가 있다면 쿠키를 넣어준다.\n\n  if (req && cookie) {\n    axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].defaults.headers.Cookie = cookie;\n  }\n\n  await store.dispatch((0,_actions_user__WEBPACK_IMPORTED_MODULE_11__.loadMyInfo)());\n  await store.dispatch((0,_actions_post__WEBPACK_IMPORTED_MODULE_10__.loadPosts)());\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/profile.js\n");

/***/ }),

/***/ "./reducers/index.js":
/*!***************************!*\
  !*** ./reducers/index.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ \"redux\");\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-redux-wrapper */ \"next-redux-wrapper\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _userSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./userSlice */ \"./reducers/userSlice.js\");\n/* harmony import */ var _postSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./postSlice */ \"./reducers/postSlice.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_userSlice__WEBPACK_IMPORTED_MODULE_2__, _postSlice__WEBPACK_IMPORTED_MODULE_3__]);\n([_userSlice__WEBPACK_IMPORTED_MODULE_2__, _postSlice__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst A = {\n  talk: () => {\n    console.log(\"A talk\");\n  }\n};\nA.talk(); // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__.HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = (0,redux__WEBPACK_IMPORTED_MODULE_0__.combineReducers)({\n          user: _userSlice__WEBPACK_IMPORTED_MODULE_2__[\"default\"].reducer,\n          post: _postSlice__WEBPACK_IMPORTED_MODULE_3__[\"default\"].reducer\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rootReducer);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZWR1Y2Vycy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQSxNQUFNSSxDQUFDLEdBQUc7RUFDUkMsSUFBSSxFQUFHLE1BQU07SUFDWEMsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtFQUNEO0FBSE8sQ0FBVjtBQU1BSCxDQUFDLENBQUNDLElBQUYsSUFFQTs7QUFDQSxNQUFNRyxXQUFXLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSLEtBQW1CO0VBQ3JDLFFBQVFBLE1BQU0sQ0FBQ0MsSUFBZjtJQUNFLEtBQUtWLHVEQUFMO01BQ0UsT0FBT1MsTUFBTSxDQUFDRSxPQUFkOztJQUNGO01BQVM7UUFDUCxNQUFNQyxlQUFlLEdBQUdiLHNEQUFlLENBQUM7VUFDdENjLElBQUksRUFBRVosMERBRGdDO1VBRXRDYyxJQUFJLEVBQUViLDBEQUFpQlk7UUFGZSxDQUFELENBQXZDO1FBSUEsT0FBT0YsZUFBZSxDQUFDSixLQUFELEVBQVFDLE1BQVIsQ0FBdEI7TUFDRDtFQVRIO0FBV0QsQ0FaRDs7QUFjQSxpRUFBZUYsV0FBZixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9yZWR1Y2Vycy9pbmRleC5qcz9iOWI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gXCJyZWR1eFwiO1xuaW1wb3J0IHsgSFlEUkFURSB9IGZyb20gJ25leHQtcmVkdXgtd3JhcHBlcic7XG5cbmltcG9ydCB1c2VyU2xpY2UgZnJvbSAnLi91c2VyU2xpY2UnO1xuaW1wb3J0IHBvc3RTbGljZSBmcm9tICcuL3Bvc3RTbGljZSc7XG5cbmNvbnN0IEEgPSB7XG4gIHRhbGsgOiAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJBIHRhbGtcIik7XG4gIH1cbn1cblxuQS50YWxrKClcblxuLy8gKOydtOyghOyDge2DnCwg7JWh7IWYKSA9PiDri6TsnYzsg4Htg5xcbmNvbnN0IHJvb3RSZWR1Y2VyID0gKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgSFlEUkFURTpcbiAgICAgIHJldHVybiBhY3Rpb24ucGF5bG9hZDtcbiAgICBkZWZhdWx0OiB7XG4gICAgICBjb25zdCBjb21iaW5lZFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoe1xuICAgICAgICB1c2VyOiB1c2VyU2xpY2UucmVkdWNlcixcbiAgICAgICAgcG9zdDogcG9zdFNsaWNlLnJlZHVjZXIsXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBjb21iaW5lZFJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCByb290UmVkdWNlcjsiXSwibmFtZXMiOlsiY29tYmluZVJlZHVjZXJzIiwiSFlEUkFURSIsInVzZXJTbGljZSIsInBvc3RTbGljZSIsIkEiLCJ0YWxrIiwiY29uc29sZSIsImxvZyIsInJvb3RSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwicGF5bG9hZCIsImNvbWJpbmVkUmVkdWNlciIsInVzZXIiLCJyZWR1Y2VyIiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./reducers/index.js\n");

/***/ }),

/***/ "./reducers/postSlice.js":
/*!*******************************!*\
  !*** ./reducers/postSlice.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"initialState\": () => (/* binding */ initialState)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _actions_post__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/post */ \"./actions/post.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_post__WEBPACK_IMPORTED_MODULE_1__]);\n_actions_post__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst initialState = {\n  mainPosts: [],\n  hasMorePosts: true,\n  // 다음 posts 여부\n  singlePost: null,\n  imagePaths: [],\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  editPostLoading: false,\n  editPostDone: false,\n  editPostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  likeCommentLoading: false,\n  likeCommentDone: false,\n  likeCommentError: null,\n  unLikeCommentLoading: false,\n  unLikeCommentDone: false,\n  unLikeCommentError: null,\n  removeCommentLoading: false,\n  removeCommentDone: false,\n  removeCommentError: null,\n  retweetCommentLoading: false,\n  retweetCommentDone: false,\n  retweetCommentError: null,\n  editCommentLoading: false,\n  editCommentDone: false,\n  editCommentError: null\n};\nconst postSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n  name: 'post',\n  initialState,\n  reducers: {\n    removeImage(state, action) {\n      state.imagePaths = state.imagePaths.filter((v, i) => i !== action.payload);\n    }\n\n  },\n  extraReducers: builder => builder.addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPost.pending, (state, action) => {\n    state.loadPostLoading = true;\n    state.loadPostDone = false;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPost.fulfilled, (state, action) => {\n    state.loadPostLoading = false;\n    state.loadPostDone = true;\n    state.singlePost = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPost.rejected, (state, action) => {\n    state.loadPostLoading = false;\n    state.loadPostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPosts.pending, (state, action) => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n    state.loadPostsError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPosts.fulfilled, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n    state.mainPosts = action.payload;\n    state.hasMorePosts = action.payload.length === 10;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadHashtagPosts.pending, state => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n    state.loadPostsError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadHashtagPosts.fulfilled, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n    state.mainPosts = action.payload;\n    state.hasMorePosts = action.payload.length === 10;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadHashtagPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.error.message;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadUserPosts.pending, state => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n    state.loadPostsError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadUserPosts.fulfilled, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n    state.mainPosts = action.payload;\n    state.hasMorePosts = action.payload.length === 10;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.loadUserPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.error.message;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addPost.pending, (state, action) => {\n    state.addPostLoading = true;\n    state.addPostDone = false;\n    state.addPostError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addPost.fulfilled, (state, action) => {\n    state.addPostLoading = false;\n    state.addPostDone = true;\n    state.mainPosts.unshift(action.payload);\n    state.imagePaths = [];\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addPost.rejected, (state, action) => {\n    state.addPostLoading = false;\n    state.addPostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.uploadImages.pending, (state, action) => {\n    state.uploadImagesLoading = true;\n    state.uploadImagesDone = false;\n    state.uploadImagesError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.uploadImages.fulfilled, (state, action) => {\n    state.uploadImagesLoading = false;\n    state.uploadImagesDone = true;\n    state.imagePaths = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.uploadImages.rejected, (state, action) => {\n    state.uploadImagesLoading = false;\n    state.uploadImagesError = action.payload.message;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addComment.pending, (state, action) => {\n    state.addCommentLoading = true;\n    state.addCommentDone = false;\n    state.addCommentError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addComment.fulfilled, (state, action) => {\n    state.addCommentLoading = false;\n    state.addCommentDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Comments.unshift(action.payload);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.addComment.rejected, (state, action) => {\n    state.addCommentLoading = false;\n    state.addCommentError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removePost.pending, (state, action) => {\n    state.removePostLoading = true;\n    state.removePostDone = false;\n    state.removePostError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removePost.fulfilled, (state, action) => {\n    state.removePostLoading = false;\n    state.removePostDone = true;\n    state.mainPosts = state.mainPosts.filter(v => v.id !== action.payload.PostId);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removePost.rejected, (state, action) => {\n    state.removePostLoading = false;\n    state.removePostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likePost.pending, (state, action) => {\n    state.likePostLoading = true;\n    state.likePostDone = false;\n    state.likePostError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likePost.fulfilled, (state, action) => {\n    state.likePostLoading = false;\n    state.likePostDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId); // 해당 게시글 찾기\n\n    post.Likers.push({\n      id: action.payload.UserId\n    }); // 좋아요 누른 사람 추가\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likePost.rejected, (state, action) => {\n    state.likePostLoading = false;\n    state.likePostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikePost.pending, (state, action) => {\n    state.unLikePostLoading = true;\n    state.unLikePostDone = false;\n    state.unLikePostError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikePost.fulfilled, (state, action) => {\n    state.unLikePostLoading = false;\n    state.unLikePostDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Likers = post.Likers.filter(v => v.id !== action.payload.UserId);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikePost.rejected, (state, action) => {\n    state.unLikePostLoading = false;\n    state.unLikePostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.retweetPost.pending, (state, action) => {\n    state.retweetLoading = true;\n    state.retweetDone = false;\n    state.retweetError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.retweetPost.fulfilled, (state, action) => {\n    state.retweetLoading = false;\n    state.retweetDone = true;\n    state.mainPosts.unshift(action.payload);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.retweetPost.rejected, (state, action) => {\n    state.retweetLoading = false;\n    state.retweetError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editPost.pending, (state, action) => {\n    state.editPostLoading = true;\n    state.editPostDone = false;\n    state.editPostError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editPost.fulfilled, (state, action) => {\n    state.editPostLoading = false;\n    state.editPostDone = true;\n    state.mainPosts.find(v => v.id === action.payload.PostId).content = action.payload.content;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editPost.rejected, (state, action) => {\n    state.editPostLoading = false;\n    state.editPostError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likeComment.pending, (state, action) => {\n    state.likeCommentLoading = true;\n    state.likeCommentDone = false;\n    state.likeCommentError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likeComment.fulfilled, (state, action) => {\n    state.likeCommentLoading = false;\n    state.likeCommentDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    const comment = post.Comments.find(v => v.id === action.payload.CommentId);\n    comment.CommentLikers.push({\n      id: action.payload.UserId\n    });\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.likeComment.rejected, (state, action) => {\n    state.likeCommentLoading = false;\n    state.likeCommentError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikeComment.pending, (state, action) => {\n    state.unLikeCommentLoading = true;\n    state.unLikeCommentDone = false;\n    state.unLikeCommentError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikeComment.fulfilled, (state, action) => {\n    state.unLikeCommentLoading = false;\n    state.unLikeCommentDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    const comment = post.Comments.find(v => v.id === action.payload.CommentId);\n    comment.CommentLikers = comment.CommentLikers.filter(v => v.id !== action.payload.UserId);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.unLikeComment.rejected, (state, action) => {\n    state.unLikeCommentLoading = false;\n    state.unLikeCommentError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removeComment.pending, (state, action) => {\n    state.removeCommentLoading = true;\n    state.removeCommentDone = false;\n    state.removeCommentError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removeComment.fulfilled, (state, action) => {\n    state.removeCommentLoading = false;\n    state.removeCommentDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Comments = post.Comments.filter(v => v.id !== action.payload.CommentId);\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.removeComment.rejected, (state, action) => {\n    state.removeCommentLoading = false;\n    state.removeCommentError = action.payload;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editComment.pending, (state, action) => {\n    state.editCommentLoading = true;\n    state.editCommentDone = false;\n    state.editCommentError = null;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editComment.fulfilled, (state, action) => {\n    state.editCommentLoading = false;\n    state.editCommentDone = true;\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Comments.find(v => v.id === action.payload.CommentId).content = action.payload.content;\n  }).addCase(_actions_post__WEBPACK_IMPORTED_MODULE_1__.editComment.rejected, (state, action) => {\n    state.editCommentLoading = false;\n    state.editCommentError = action.payload;\n  })\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (postSlice);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/postSlice.js\n");

/***/ }),

/***/ "./reducers/userSlice.js":
/*!*******************************!*\
  !*** ./reducers/userSlice.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"initialState\": () => (/* binding */ initialState)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _actions_user__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/user */ \"./actions/user.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_actions_user__WEBPACK_IMPORTED_MODULE_1__]);\n_actions_user__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst initialState = {\n  me: null,\n  // 내 정보\n  userInfo: null,\n  // 유저 정보\n  loadMyInfoLoading: false,\n  // 로그인 정보 조회\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false,\n  // 유저 정보 조회\n  loadUserDone: false,\n  loadUserError: null,\n  loadFollowerUsersLoading: false,\n  // 팔로워 조회\n  loadFollowerUsersDone: false,\n  loadFollowerUsersError: null,\n  loadFollowingUsersLoading: false,\n  // 팔로잉 조회\n  loadFollowingUsersDone: false,\n  loadFollowingUsersError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  // 팔로우\n  followDone: false,\n  followError: null,\n  unFollowLoading: false,\n  // 언팔로우\n  unFollowDone: false,\n  unFollowError: null,\n  removeFollowerLoading: false,\n  // 팔로워 삭제\n  removeFollowerDone: false,\n  removeFollowerError: null\n}; //toolkit 사용방법\n\nconst userSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n  name: 'user',\n  initialState,\n  reducers: {\n    addPostToMe(state, action) {\n      state.me.Posts.unshift({\n        id: action.payload\n      });\n    },\n\n    removePostToMe(state, action) {\n      state.me.Posts = state.me.Posts.filter(v => v.id !== action.payload.PostId);\n      console.log(state.me.Posts);\n    },\n\n    addCommentToMe(state, action) {\n      state.me.Comments.unshift({\n        id: action.payload\n      });\n    },\n\n    removeCommentToMe(state, action) {\n      state.me.Comments = state.me.Comments.filter(v => v.id !== action.payload.CommentId);\n    }\n\n  },\n  extraReducers: builder => builder.addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadMyInfo.pending, (state, action) => {\n    state.loadMyInfoLoading = true;\n    state.loadMyInfoDone = false;\n    state.loadMyInfoError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadMyInfo.fulfilled, (state, action) => {\n    state.loadMyInfoLoading = false;\n    state.loadMyInfoDone = true;\n    state.me = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadMyInfo.rejected, (state, action) => {\n    state.loadMyInfoLoading = false;\n    state.loadMyInfoError = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logIn.pending, (state, action) => {\n    state.logInLoading = true;\n    state.logInDone = false;\n    state.logInError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logIn.fulfilled, (state, action) => {\n    state.logInLoading = false;\n    state.logInDone = true;\n    state.me = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logIn.rejected, (state, action) => {\n    state.logInLoading = false;\n    state.logInError = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logOut.pending, (state, action) => {\n    state.logOutLoading = true;\n    state.logOutDone = false;\n    state.logOutError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logOut.fulfilled, (state, action) => {\n    state.logOutLoading = false;\n    state.logOutDone = true;\n    state.me = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.logOut.rejected, (state, action) => {\n    state.logOutLoading = false;\n    state.logOutError = action.error;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.signUp.pending, (state, action) => {\n    state.signUpLoading = true;\n    state.signUpDone = false;\n    state.signUpError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.signUp.fulfilled, (state, action) => {\n    state.signUpLoading = false;\n    state.signUpDone = true;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.signUp.rejected, (state, action) => {\n    state.signUpLoading = false;\n    state.signUpError = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.followUser.pending, (state, action) => {\n    state.followLoading = true;\n    state.followDone = false;\n    state.followError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.followUser.fulfilled, (state, action) => {\n    state.followLoading = false;\n    state.followDone = true;\n    state.me.Followings.unshift({\n      id: action.payload.UserId\n    });\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.followUser.rejected, (state, action) => {\n    state.followLoading = false;\n    state.followError = action.error;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.unFollowUser.pending, (state, action) => {\n    state.unFollowLoading = true;\n    state.unFollowDone = false;\n    state.unFollowError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.unFollowUser.fulfilled, (state, action) => {\n    state.unFollowLoading = false;\n    state.unFollowDone = true;\n    state.me.Followings = state.me.Followings.filter(v => v.id !== action.payload.UserId);\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.unFollowUser.rejected, (state, action) => {\n    state.unFollowLoading = false;\n    state.unFollowError = action.error;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.removeFollower.pending, (state, action) => {\n    state.removeFollowerLoading = true;\n    state.removeFollowerDone = false;\n    state.removeFollowerError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.removeFollower.fulfilled, (state, action) => {\n    state.removeFollowerLoading = false;\n    state.removeFollowerDone = true;\n    state.me.Followers = state.me.Followers.filter(v => v.id !== action.payload.UserId);\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.removeFollower.rejected, (state, action) => {\n    state.removeFollowerError = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.changeNickname.pending, (state, action) => {\n    state.changeNicknameLoading = true;\n    state.changeNicknameDone = false;\n    state.changeNicknameError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.changeNickname.fulfilled, (state, action) => {\n    state.changeNicknameLoading = false;\n    state.changeNicknameDone = true;\n    state.me.nickname = action.payload.nickname;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.changeNickname.rejected, (state, action) => {\n    state.changeNicknameLoading = false;\n    state.changeNicknameError = action.error;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadUser.pending, (state, action) => {\n    state.loadUserLoading = true;\n    state.loadUserDone = false;\n    state.loadUserError = null;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadUser.fulfilled, (state, action) => {\n    state.loadUserLoading = false;\n    state.loadUserDone = true;\n    state.userInfo = action.payload;\n  }).addCase(_actions_user__WEBPACK_IMPORTED_MODULE_1__.loadUser.rejected, (state, action) => {\n    state.loadUserLoading = false;\n    state.loadUserError = action.payload;\n  })\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userSlice);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/userSlice.js\n");

/***/ }),

/***/ "./store/configureStore.js":
/*!*********************************!*\
  !*** ./store/configureStore.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-redux-wrapper */ \"next-redux-wrapper\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var redux_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-logger */ \"redux-logger\");\n/* harmony import */ var redux_logger__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_logger__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reducers */ \"./reducers/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_reducers__WEBPACK_IMPORTED_MODULE_3__]);\n_reducers__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// configureStore.js\n\n\n\n\nconst isDev = true;\n\nconst createStore = () => {\n  const middleware = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.getDefaultMiddleware)();\n\n  if (isDev) {\n    middleware.push((redux_logger__WEBPACK_IMPORTED_MODULE_2___default()));\n  }\n\n  const store = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.configureStore)({\n    reducer: _reducers__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    middleware,\n    devTools: isDev\n  });\n  return store;\n};\n\nconst wrapper = (0,next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__.createWrapper)(createStore, {\n  debug: isDev\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (wrapper);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdG9yZS9jb25maWd1cmVTdG9yZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNSyxLQUFLLE9BQVg7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHLE1BQU07RUFDdEIsTUFBTUMsVUFBVSxHQUFHTCxzRUFBb0IsRUFBdkM7O0VBQ0EsSUFBR0csS0FBSCxFQUFTO0lBQ0xFLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQkwscURBQWhCO0VBQ0g7O0VBQ0QsTUFBTU0sS0FBSyxHQUFHUixnRUFBYyxDQUFDO0lBQ3pCUyxPQUFPLEVBQUdOLGlEQURlO0lBRXpCRyxVQUZ5QjtJQUd6QkksUUFBUSxFQUFHTjtFQUhjLENBQUQsQ0FBNUI7RUFLQSxPQUFPSSxLQUFQO0FBQ0gsQ0FYRDs7QUFhQSxNQUFNRyxPQUFPLEdBQUdaLGlFQUFhLENBQUNNLFdBQUQsRUFBYztFQUN2Q08sS0FBSyxFQUFFUjtBQURnQyxDQUFkLENBQTdCO0FBSUEsaUVBQWVPLE9BQWYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vc3RvcmUvY29uZmlndXJlU3RvcmUuanM/ZjIwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25maWd1cmVTdG9yZS5qc1xuaW1wb3J0IHsgY3JlYXRlV3JhcHBlciB9IGZyb20gJ25leHQtcmVkdXgtd3JhcHBlcic7XG5pbXBvcnQgeyBjb25maWd1cmVTdG9yZSAsIGdldERlZmF1bHRNaWRkbGV3YXJlIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJ3JlZHV4LWxvZ2dlcic7XG5pbXBvcnQgcm9vdFJlZHVjZXIgZnJvbSAnLi4vcmVkdWNlcnMnO1xuXG5jb25zdCBpc0RldiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnO1xuY29uc3QgY3JlYXRlU3RvcmUgPSAoKSA9PiB7XG4gICAgY29uc3QgbWlkZGxld2FyZSA9IGdldERlZmF1bHRNaWRkbGV3YXJlKCk7XG4gICAgaWYoaXNEZXYpeyBcbiAgICAgICAgbWlkZGxld2FyZS5wdXNoKGxvZ2dlcik7XG4gICAgfVxuICAgIGNvbnN0IHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xuICAgICAgICByZWR1Y2VyIDogcm9vdFJlZHVjZXIsXG4gICAgICAgIG1pZGRsZXdhcmUsXG4gICAgICAgIGRldlRvb2xzIDogaXNEZXYsXG4gICAgfSk7XG4gICAgcmV0dXJuIHN0b3JlO1xufTtcblxuY29uc3Qgd3JhcHBlciA9IGNyZWF0ZVdyYXBwZXIoY3JlYXRlU3RvcmUsIHsgXG4gICAgZGVidWc6IGlzRGV2LCBcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB3cmFwcGVyOyJdLCJuYW1lcyI6WyJjcmVhdGVXcmFwcGVyIiwiY29uZmlndXJlU3RvcmUiLCJnZXREZWZhdWx0TWlkZGxld2FyZSIsImxvZ2dlciIsInJvb3RSZWR1Y2VyIiwiaXNEZXYiLCJjcmVhdGVTdG9yZSIsIm1pZGRsZXdhcmUiLCJwdXNoIiwic3RvcmUiLCJyZWR1Y2VyIiwiZGV2VG9vbHMiLCJ3cmFwcGVyIiwiZGVidWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./store/configureStore.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-api-route.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/lib/is-api-route.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isAPIRoute = isAPIRoute;\nfunction isAPIRoute(value) {\n    return value === \"/api\" || Boolean(value == null ? void 0 : value.startsWith(\"/api/\"));\n}\n\n//# sourceMappingURL=is-api-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1hcGktcm91dGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBa0I7QUFDbEI7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbm9kZWJpcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1hcGktcm91dGUuanM/MTY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaXNBUElSb3V0ZSA9IGlzQVBJUm91dGU7XG5mdW5jdGlvbiBpc0FQSVJvdXRlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSBcIi9hcGlcIiB8fCBCb29sZWFuKHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS5zdGFydHNXaXRoKFwiL2FwaS9cIikpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy1hcGktcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-api-route.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === \"object\" && err !== null && \"name\" in err && \"message\" in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === \"undefined\") {\n            return new Error(\"An undefined error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n        if (err === null) {\n            return new Error(\"A null error was thrown, \" + \"see here for more info: https://nextjs.org/docs/messages/threw-undefined\");\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + \"\");\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9saWIvaXMtZXJyb3IuanM/MTc4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzRXJyb3I7XG5leHBvcnRzLmdldFByb3BlckVycm9yID0gZ2V0UHJvcGVyRXJyb3I7XG52YXIgX2lzUGxhaW5PYmplY3QgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9pcy1wbGFpbi1vYmplY3RcIik7XG5mdW5jdGlvbiBpc0Vycm9yKGVycikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyID09PSBcIm9iamVjdFwiICYmIGVyciAhPT0gbnVsbCAmJiBcIm5hbWVcIiBpbiBlcnIgJiYgXCJtZXNzYWdlXCIgaW4gZXJyO1xufVxuZnVuY3Rpb24gZ2V0UHJvcGVyRXJyb3IoZXJyKSB7XG4gICAgaWYgKGlzRXJyb3IoZXJyKSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgICAgICAvLyBwcm92aWRlIGJldHRlciBlcnJvciBmb3IgY2FzZSB3aGVyZSBgdGhyb3cgdW5kZWZpbmVkYFxuICAgICAgICAvLyBpcyBjYWxsZWQgaW4gZGV2ZWxvcG1lbnRcbiAgICAgICAgaWYgKHR5cGVvZiBlcnIgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJBbiB1bmRlZmluZWQgZXJyb3Igd2FzIHRocm93biwgXCIgKyBcInNlZSBoZXJlIGZvciBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3RocmV3LXVuZGVmaW5lZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiQSBudWxsIGVycm9yIHdhcyB0aHJvd24sIFwiICsgXCJzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcigoMCwgX2lzUGxhaW5PYmplY3QpLmlzUGxhaW5PYmplY3QoZXJyKSA/IEpTT04uc3RyaW5naWZ5KGVycikgOiBlcnIgKyBcIlwiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGViaXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL25leHQvbGluay5qcz83NWIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9saW5rJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "@ant-design/icons":
/*!************************************!*\
  !*** external "@ant-design/icons" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@ant-design/icons");

/***/ }),

/***/ "@reduxjs/toolkit":
/*!***********************************!*\
  !*** external "@reduxjs/toolkit" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@reduxjs/toolkit");

/***/ }),

/***/ "antd":
/*!***********************!*\
  !*** external "antd" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("antd");

/***/ }),

/***/ "next-redux-wrapper":
/*!*************************************!*\
  !*** external "next-redux-wrapper" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-redux-wrapper");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "../shared/lib/app-router-context":
/*!*************************************************************!*\
  !*** external "next/dist/shared/lib/app-router-context.js" ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/app-router-context.js");

/***/ }),

/***/ "./head-manager-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/head-manager-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head-manager-context.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../shared/lib/is-plain-object":
/*!**********************************************************!*\
  !*** external "next/dist/shared/lib/is-plain-object.js" ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/is-plain-object.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../page-path/denormalize-page-path":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/page-path/denormalize-page-path.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/page-path/denormalize-page-path.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/add-path-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/add-path-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/add-path-prefix.js");

/***/ }),

/***/ "./utils/compare-states":
/*!**********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/compare-states.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/compare-states.js");

/***/ }),

/***/ "./utils/format-next-pathname-info":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-next-pathname-info.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-next-pathname-info.js");

/***/ }),

/***/ "../shared/lib/router/utils/format-url":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/format-url.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/format-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-next-pathname-info":
/*!******************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-next-pathname-info.js" ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-next-pathname-info.js");

/***/ }),

/***/ "./utils/is-bot":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot.js" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-path":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-path.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-path.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "../shared/lib/router/utils/path-has-prefix":
/*!***********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/path-has-prefix.js" ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/path-has-prefix.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/remove-trailing-slash":
/*!*****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/remove-trailing-slash.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/remove-trailing-slash.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "prop-types":
/*!*****************************!*\
  !*** external "prop-types" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("prop-types");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-redux");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "redux":
/*!************************!*\
  !*** external "redux" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("redux");

/***/ }),

/***/ "redux-logger":
/*!*******************************!*\
  !*** external "redux-logger" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("redux-logger");

/***/ }),

/***/ "styled-components":
/*!************************************!*\
  !*** external "styled-components" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("styled-components");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("axios");;

/***/ }),

/***/ "swr":
/*!**********************!*\
  !*** external "swr" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = import("swr");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/profile.js"));
module.exports = __webpack_exports__;

})();